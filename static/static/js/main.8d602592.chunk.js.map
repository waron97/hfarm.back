{"version":3,"sources":["utils/Errors.ts","utils/IsDev.ts","utils/MockData.ts","utils/Authenticators.ts","components/Auth/AuthUI.tsx","components/Spinner.tsx/Spinner.tsx","components/Auth/Auth.tsx","utils/JobCallApi.ts","components/CallDetailts/AuthVariants.tsx","components/CallDetailts/CallDetails.tsx","media/bookmark.svg","media/search.svg","media/add.svg","media/menu.svg","utils/icons.ts","components/Dashboard/AddCall.tsx","components/Dashboard/CallCard.tsx","components/Dashboard/FilterBar.tsx","components/Dashboard/Dashboard.tsx","utils/prettify.ts","components/MyApplications/MyApplications.tsx","components/MyPosts/MyPosts.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["NoTokenError","message","Error","NoAuthTokenOnRequest","AuthServerRejection","AuthSignupRejection","GenericServerError","isDev","require","reactIsDev","React","sampleUser","username","token","uid","clientId","favorites","accountType","callBuilder","len","ret","i","push","id","poster","title","faker","jobTitle","description","paragraphs","companyName","type","arrayElement","timePosted","recent","applications","number","applicantId","applicantName","firstName","applicantSeniority","timeApplied","applicationStatus","applicantType","mockData","currentUser","applicationBuilder","target","handleServerRejections","err","reject","console","log","AuthUI","props","body","useState","section","setSection","setUsername","password","setPassword","setType","setClientId","handleLoginSubmit","e","preventDefault","setUsernameAndPassword","handleSignupSubmit","registerWithUsernameAndPassword","className","errorMessage","onSubmit","htmlFor","required","onChange","value","minLength","placeholder","str","onClick","nullError","Spinner","color","UserContext","createContext","Auth","setState","credentials","usernameAndPassword","handleAuthSuccess","user","loading","isAuthenticated","handleTokenReceived","localStorage","setItem","authenticate","handleAuthFailure","state","Promise","resolve","a","fetchParams","method","JSON","stringify","fetch","response","ok","text","then","catch","undefined","handleSignupSuccess","handleSignupFailure","getItem","headers","json","register","window","confirm","alterUserFavorites","operation","callId","filter","alert","addUserApplicationLocally","this","prevProps","prevState","Provider","editFavorites","editApplications","children","Component","getCalls","mock","MockData","ls","data","map","Date","createCall","call","getCall","url","updateApplicationStatus","newStatus","applicationId","applyToCall","seniority","getUserPosts","post","getUserApplications","editCall","newTitle","newDescription","CallInformation","editing","setEditing","setTitle","setDescritpion","error","setError","success","setSuccess","useContext","handleChangeSubmit","owner","toLocaleDateString","rows","split","par","UserIsOwner","setLoading","applicants","setApplicants","query","setQuery","queryType","setQueryType","useEffect","filteredApplicants","application","includes","setApplicationStatus","refresh","style","backgroundColor","city","fontWeight","UserIsNotOwner","hasApplied","setSeniority","ctx","handlesubmit","form","CallDetails","_path","_path2","setCall","isOwner","setIsOwner","match","params","refreshCallData","_extends","Object","assign","arguments","length","source","key","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBookmark","_ref","svgRef","titleId","xmlns","height","viewBox","width","ref","d","fill","ForwardRef","SvgSearch","SvgAdd","BookmarkIcon","bookmarkIcon","SearchIcon","searchIcon","AddIcon","addIcon","AddCall","addPopup","clicked","setClicked","setDescription","newCall","addCall","cellPadding","cols","readOnly","CallCard","taskbarBackgroundColor","isFavorite","to","FilterBar","clientQuery","setClientQuery","setClientIdQuery","sortByIsFavorite","b","Dashboard","calls","setCalls","filteredCalls","setFilteredCalls","clientIdQuery","setIsLoading","sort","sortedFavorites","getColorOnStatus","status","MyApplications","setApplications","applicationNodes","href","MyPosts","posts","setPosts","postNodes","NavBar","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Text","removeItem","location","reload","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wZAUaA,EAAb,kDACE,WAAYC,GAAkB,uCACtBA,GAFV,sBAAkCC,QAUrBC,EAAb,kDACE,WAAYF,GAAkB,uCACtBA,GAFV,sBAA0CC,QAS7BE,EAAb,kDACE,WAAYH,GAA8B,uCAClCA,GAFV,sBAAyCC,QAS5BG,EAAb,kDACE,WAAYJ,GAA+B,uCACnCA,GAFV,sBAAyCC,QAU5BI,EAAb,kDACE,WAAYL,GAAkB,uCACtBA,GAFV,sBAAwCC,QC5CzBK,EAHIC,EAAQ,GACJC,CAAWC,K,OCQ5BC,EAAmB,CACvBC,SAAU,OACVC,MAAO,SACPC,IAAK,GACLC,SAAU,kBACVC,UAAW,GACXC,YAAa,YAGTC,EAAc,SAACC,GAEnB,IADA,IAAMC,EAAc,GACXC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAIE,KAAK,CACPC,GAAIF,EAEJG,OAAQb,EAAWG,IACnBW,MAAOC,OAAWC,WAClBC,YAAaF,QAAYG,WAAW,GACpCd,SAAUW,UAAcI,cACxBC,KAAML,SAAaM,aAAa,CAAC,WAAY,aAC7CC,WAAYP,OAAWQ,SACvBC,aAAc,CACZ,CACEZ,GAAIG,SAAaU,SACjBC,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BC,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDS,YAAaf,OAAWQ,SACxBQ,kBAAmB,YACnBC,cAAejB,SAAaM,aAAa,CAAC,WAAY,cAExD,CACET,GAAIG,SAAaU,SACjBC,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BC,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDS,YAAaf,OAAWQ,SACxBQ,kBAAmB,WACnBC,cAAejB,SAAaM,aAAa,CAAC,WAAY,cAExD,CACET,GAAIG,SAAaU,SACjBC,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BC,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDS,YAAaf,OAAWQ,SACxBQ,kBAAmB,SACnBC,cAAejB,SAAaM,aAAa,CAAC,WAAY,cAExD,CACET,GAAIG,SAAaU,SACjBC,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BC,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDS,YAAaf,OAAWQ,SACxBQ,kBAAmB,aACnBC,cAAejB,SAAaM,aAAa,CAAC,WAAY,cAExD,CACET,GAAIG,SAAaU,SACjBC,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BC,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDS,YAAaf,OAAWQ,SACxBQ,kBAAmB,WACnBC,cAAejB,SAAaM,aAAa,CAAC,WAAY,iBAK9D,OAAOZ,GA8BMwB,EANY,CACzBC,YAAalC,EACbO,YAAaA,EACb4B,mBAxByB,SAAC3B,GAE1B,IADA,IAAMC,EAAyB,GACtBC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAIE,KAAK,CACPe,YAAaX,SAAaU,SAC1BE,cAAeZ,OAAWa,YAC1BG,kBAAmBhB,SAAaM,aAAa,CAC3C,WACA,aACA,YACA,WAEFT,GAAIG,SAAaU,SACjBK,YAAaf,OAAWQ,SACxBM,mBAAoBd,SAAaM,aAAa,CAAC,SAAU,WACzDe,OAAQ7B,EAAY,GAAG,KAG3B,OAAOE,ICKI4B,EAAyB,SAACC,EAAaC,GAElD,OADAC,QAAQC,IAAIH,GACJA,GACN,IAAK,eACHC,EAAO,IAAI7C,EAAoB4C,IAC/B,MACF,IAAK,oBACHC,EAAO,IAAI7C,EAAoB,mBAC/B,MACF,IAAK,iBACH6C,EAAO,IAAI5C,EAAmB2C,IAC9B,MACF,IAAK,WACHC,EAAO,IAAI/C,EAAqB8C,IAChC,MACF,IAAK,oBACHC,EAAO,IAAI9C,EAAoB6C,IAC/B,MACF,IAAK,gBACHC,EAAO,IAAI/C,EAAqB8C,IAChC,MACF,IAAK,eACH,MAAM,IAAI3C,EAAJ,6F,wBC+EG+C,MArLf,SAAgBC,GAAe,IAuBzBC,EAvBwB,EACEC,mBAAS,UADX,mBACrBC,EADqB,KACZC,EADY,OAEIF,mBAAS,IAFb,mBAErB5C,EAFqB,KAEX+C,EAFW,OAGIH,mBAAS,IAHb,mBAGrBI,EAHqB,KAGXC,EAHW,OAIJL,mBAAsB,YAJlB,mBAIrBzB,EAJqB,KAIf+B,EAJe,OAKIN,qBALJ,mBAKrBzC,EALqB,KAKXgD,EALW,KAMtBC,EAAoB,SAACC,GACzBA,EAAEC,iBACFZ,EAAMa,uBAAuB,CAAEvD,WAAUgD,cAMrCQ,EAAqB,SAACH,GAC1BA,EAAEC,iBACFZ,EAAMe,gCAAgC,CACpCzD,WACAgD,WACA7B,OACAhB,cAgIJ,OA1HEwC,EAFc,WAAZE,EAGA,sBAAKa,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,oBACChB,EAAMiB,cACL,qBAAKD,UAAU,qBAAf,SAAqChB,EAAMiB,eAE7C,uBACEC,SACc,WAAZf,EAAuBO,EAAoBI,EAE7CE,UAAU,aAJZ,UAME,wBAAOG,QAAQ,WAAf,UACE,6CACA,uBACEH,UAAU,eACVI,UAAQ,EACR3C,KAAK,OACLR,GAAG,WACHoD,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAElB,OAAO6B,aAG1C,wBAAOH,QAAQ,WAAf,UACE,6CACA,uBACEH,UAAU,eACVI,UAAQ,EACR3C,KAAK,WACLR,GAAG,WACHoD,SAAU,SAACV,GAAD,OAAOJ,EAAYI,EAAElB,OAAO6B,aAI1C,qBAAKN,UAAU,qBAAf,SACE,uBACEI,UAAQ,EACRJ,UAAU,uBACVvC,KAAK,SACL6C,MAAM,mBAQd,sBAAKN,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,0BACChB,EAAMiB,cACL,qBAAKD,UAAU,gCAAf,SACGhB,EAAMiB,eAGX,uBACEC,SACc,WAAZf,EAAuBO,EAAoBI,EAF/C,UAKE,wBAAOK,QAAQ,WAAf,UACE,6CACA,uBACEI,UAAW,EACXH,UAAQ,EACRJ,UAAU,eACVvC,KAAK,OACLR,GAAG,WACHuD,YAAY,WACZH,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAElB,OAAO6B,aAG1C,wBAAOH,QAAQ,WAAf,UACE,6CACA,uBACEI,UAAW,EACXH,UAAQ,EACR3C,KAAK,WACLR,GAAG,WACH+C,UAAU,eACVQ,YAAY,WACZH,SAAU,SAACV,GAAD,OAAOJ,EAAYI,EAAElB,OAAO6B,aAG1C,wBAAOH,QAAQ,cAAf,UACE,oDACA,yBACEH,UAAU,eACV/C,GAAG,cACHqD,MAAO7C,EACP4C,SAAU,SAACV,GA7HzB,IAAuBc,EA8HPjB,EA7HF,cADSiB,EA8Hed,EAAElB,OAAO6B,OA7Hd,WACnB,aAARG,EAA2B,WACnB,aAsHF,UAQE,wBAAQH,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,4BAGM,aAAT7C,GACC,wBAAO0C,QAAQ,WAAf,UACE,+CACA,uBACEK,YAAY,iBACZR,UAAU,eACVI,UAAQ,EACRE,MAAO7D,EACPgB,KAAK,OACLR,GAAG,WACHoD,SAAU,SAACV,GAAD,OAAOF,EAAYE,EAAElB,OAAO6B,aAI5C,qBAAKN,UAAU,qBAAf,SACE,uBACEI,UAAQ,EACRJ,UAAU,uBACVvC,KAAK,SACL6C,MAAM,oBAQhB,qBAAKN,UAAU,eAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAS,oCACK,WAAZb,GAAwB,UAE1BuB,QAAS,WACP1B,EAAM2B,YACNvB,EAAW,WANf,qBAWA,qBACEY,UAAS,oCACK,WAAZb,GAAwB,UAE1BuB,QAAS,WACP1B,EAAM2B,YACNvB,EAAW,WANf,wBAYDH,Q,iCCzLM2B,MARf,SAAiB5B,GACf,OACE,qBAAKgB,UAAU,SAAf,SACE,cAAC,IAAD,CAAQvC,KAAK,UAAUoD,MAAM,YCWtBC,EAAc1E,IAAM2E,cAAmC,MAmRrDC,E,kDAjQb,WAAYhC,GAAmB,IAAD,8BAC5B,cAAMA,IASR2B,UAAY,WACV,EAAKM,SAAS,CAAEhB,aAAc,MAXF,EAyC9BJ,uBAAyB,SAACqB,GACxB,EAAKD,SAAS,CAAEE,oBAAqBD,KA1CT,EAkD9BE,kBAAoB,SAACC,GACnB,EAAKJ,SAAS,CAAEK,SAAS,IACzBzC,QAAQC,IAAI,gBACZD,QAAQC,IAAIuC,GACZ,EAAKJ,SAAS,CAAEM,iBAAiB,EAAMF,KAAMA,KAtDjB,EAgE9BG,oBAAsB,SAACjF,GACrBkF,aAAaC,QAAQ,YAAanF,GAClC,EAAKoF,gBAlEuB,EA0E9BC,kBAAoB,SAACjC,GAEnB,GADA,EAAKsB,SAAS,CAAEK,SAAS,IACrB3B,aAAajE,GAAgB,EAAKmG,MAAMV,qBHlE9CD,EGmEwC,EAAKW,MAAMV,oBHjE5C,IAAIW,QAAJ,uCAAY,WAAOC,EAASnD,GAAhB,iBAAAoD,EAAA,0DACb/F,EADa,uBAEf2C,EAAO,IAAI9C,EAAoB,sBAFhB,iCAKXmG,EAA2B,CAC/BC,OAAQ,OACRjD,KAAMkD,KAAKC,UAAUlB,IAPN,SASMmB,MACrB,2CACAJ,GAXe,WASXK,EATW,QAaHC,GAbG,6BAcf7D,EAde,UAcc4D,EAASE,OAdvB,yBAc+B5D,GAd/B,uDAgBfmD,EAhBe,UAgBDO,EAASE,OAhBR,+EAAZ,0DGkEAC,KAAK,EAAKjB,qBACVkB,MAAM,EAAKd,uBACT,IAAIjC,aAAajE,IAAiB,EAAKmG,MAAMV,oBAIlD,YAHAtC,QAAQC,IACN,iEAGG,GACLa,aAAa7D,GACC,kBAAd6D,EAAEhE,QAEF,OACK,GACLgE,aAAa7D,GACC,mBAAd6D,EAAEhE,QAKF,YAHA,EAAKsF,SAAS,CACZhB,aAAc,+CAGX,GACLN,aAAa7D,GACC,sBAAd6D,EAAEhE,QAMF,YAJA,EAAKsF,SAAS,CACZE,yBAAqBwB,EACrB1C,aAAc,0BAGX,KAAIN,aAAa9D,GAGtB,MAAM8D,EAFN,EAAKsB,SAAS,CAAEE,yBAAqBwB,EAAW1C,aAAc,KHnGjB,IACjDiB,GGV8B,EAwH9B0B,oBAAsB,SAACvB,GACrB,EAAKJ,SAAS,CAAEK,SAAS,IACzBD,EAAK9E,OAASkF,aAAaC,QAAQ,YAAaL,EAAK9E,OACrD,EAAK0E,SAAS,CAAEI,KAAMA,EAAME,iBAAiB,KA3HjB,EAkI9BsB,oBAAsB,SAAClD,GAErB,GADA,EAAKsB,SAAS,CAAEK,SAAS,IACrB3B,aAAa5D,GAAqC,mBAAd4D,EAAEhE,QACxC,EAAKsF,SAAS,CAAEhB,aAAc,wCAEzB,GACLN,aAAa5D,GACC,iBAAd4D,EAAEhE,QAEF,EAAKsF,SAAS,CACZhB,aAAc,+DALX,CAQA,KACLN,aAAa5D,GACC,mBAAd4D,EAAEhE,SAKF,MAAMgE,EAHN,EAAKsB,SAAS,CAAEhB,aAAc,+CAnJJ,EA6J9B0B,aAAe,WACb,EAAKV,SAAS,CAAEK,SAAS,IHrLpB,IAAIQ,QAAJ,uCAAY,WAAOC,EAASnD,GAAhB,mBAAAoD,EAAA,0DACb/F,EADa,uBAIX8F,EAAQzD,EAASC,aAJN,6BAQXhC,EAAQkF,aAAaqB,QAAQ,aARlB,wBAUflE,EAAO,IAAIlD,EAAa,aAVT,kCAaTuG,EAA2B,CAC/BC,OAAQ,OACRa,QAAS,CAAC,CAAC,gBAAiBxG,KAff,UAiBQ8F,MAAM,6BAA8BJ,GAjB5C,YAiBTK,EAjBS,QAkBDC,GAlBC,6BAmBb7D,EAnBa,UAmBgB4D,EAASE,OAnBzB,yBAmBiC5D,GAnBjC,uDAqBbmD,EArBa,UAqBCO,EAASU,OArBV,+EAAZ,yDGuLFP,KAAK,EAAKrB,mBACVsB,MAAM,EAAKd,oBAjKc,EAuK9BqB,SAAW,SAAC/B,GACMgC,OAAOC,QAAP,iIAOhB,EAAKlC,SAAS,CAAEK,SAAS,IH1IkB,SAC7CJ,GAEA,OAAO,IAAIY,SAAQ,SAACC,EAASnD,GAC3B,GAAI3C,EACF2C,EAAO,IAAI7C,EAAoB,uBADjC,CAIA,IAAMkG,EAA2B,CAC/BC,OAAQ,OACRjD,KAAMkD,KAAKC,UAAUlB,IAEvBmB,MAAM,oBAAqBJ,GAAaQ,KAAxC,uCAA6C,WAAOH,GAAP,eAAAN,EAAA,yDACtCM,EAASC,GAD6B,gCAEvBD,EAASE,OAFc,OAEnC7D,EAFmC,OAGzCD,EAAuBC,EAAKC,GAHa,mCAKzCmD,EALyC,UAK3BO,EAASU,OALkB,+EAA7C,2DG+HAjD,CAAgCmB,GAC7BuB,KAAK,EAAKG,qBACVF,MAAM,EAAKG,uBAlLc,EA2L9BO,mBAAqB,SACnBC,EACAC,GAEA,IAAMjC,EAAO,EAAKQ,MAAMR,KACxB,GAAIA,EAAM,CAAC,IAAD,MAEM,QAAdgC,EAAA,OACIhC,QADJ,IACIA,GADJ,UACIA,EAAM3E,iBADV,OACI,EAAiBM,KAAKsG,GACrBjC,EAAK3E,UAAL,OAAiB2E,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAM3E,iBAAvB,aAAiB,EAAiB6G,QAAO,SAACtG,GAAD,OAAQA,GAAMqG,KAC5D,EAAKrC,SAAS,CAAEI,KAAMA,IAGtB,IAAM9E,GAAQ,YAAKsF,MAAMR,YAAX,eAAiB9E,OAAQ,EAAKsF,MAAMR,KAAK9E,MAAQ,GACzD0F,EAA2B,CAC/BC,OAAQ,OACRjD,KAAMkD,KAAKC,UAAU,CAAEnF,GAAIqG,EAAQD,UAAWA,IAC9CN,QAAS,CAAC,CAAC,gBAAiBxG,KAE9B8F,MAAM,2BAA4BJ,GAAaQ,KAA/C,uCAAoD,WAAOH,GAAP,SAAAN,EAAA,yDAC7CM,EAASC,GADoC,4BAEhDiB,MAFgD,SAGClB,EAASE,OAHV,wBAG9C,sCAH8C,+DAApD,yDA9M0B,EA8N9BiB,0BAA4B,SAACH,GAAoB,IAAD,EACxCjC,EAAO,EAAKQ,MAAMR,KACpB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMxD,oBAAN,SAAoBb,KAAKsG,GACzB,EAAKrC,SAAS,CAAEI,KAAMA,KA/NtB,EAAKQ,MAAQ,CACXN,iBAAiB,EACjBF,KAAM,KACNpB,aAAc,GACdqB,SAAS,GANiB,E,qDAc9B,WAGEoC,KAAK/B,iB,gCAMP,SACEgC,EACAC,GACC,IAAD,SAEE,UAAAA,EAAUzC,2BAAV,eAA+B7E,aAA/B,UACEoH,KAAK7B,MAAMV,2BADb,aACE,EAAgC7E,YAClC,UAAAoH,KAAK7B,MAAMV,2BAAX,eAAgC7B,aAAhC,UACEsE,EAAUzC,2BADZ,aACE,EAA+B7B,WAEjCoE,KAAK/B,iB,oBAmMT,WACE,OAAI+B,KAAK7B,MAAMP,QACN,cAAC,EAAD,IAEJoC,KAAK7B,MAAMN,iBAAoBmC,KAAK7B,MAAMR,KAW3C,cAACP,EAAY+C,SAAb,CACEvD,MAAO,CACLe,KAAMqC,KAAK7B,MAAMR,KACjByC,cAAeJ,KAAKN,mBACpBW,iBAAkBL,KAAKD,2BAJ3B,SAOGC,KAAK1E,MAAMgF,WAhBd,cAAC,EAAD,CACErD,UAAW+C,KAAK/C,UAChBV,aAAcyD,KAAK7B,MAAM5B,aACzBF,gCAAiC2D,KAAKT,SACtCpD,uBAAwB6D,KAAK7D,6B,GA/OpBzD,IAAM6H,W,QCzBZC,EAAW,WACtB,OAAO,IAAIpC,QAAJ,uCAAY,WAAOC,EAASnD,GAAhB,uBAAAoD,EAAA,0DACb/F,EADa,uBAETkI,EAAOC,EAASxH,YAAY,IAClCmF,EAAQoC,GAHO,iCAMXE,EAAK5C,aAAaqB,QAAQ,aAE1Bb,EAA2B,CAC/BC,OAAQ,MACRa,QAAS,CACP,CAAC,gBAJSsB,GAAU,IAKpB,CAAC,eAAgB,sBAZJ,SAeMhC,MAAM,mBAAoBJ,GAfhC,WAeXK,EAfW,QAgBHC,GAhBG,6BAiBf7D,EAjBe,UAiBc4D,EAASE,OAjBvB,yBAiB+B5D,GAjB/B,4DAmBY0D,EAASU,OAnBrB,QAmBTsB,EAnBS,OAoBfvC,EACEuC,EAAKC,KAAI,SAACxH,GAER,OADAA,EAAEY,WAAa,IAAI6G,KAAKzH,EAAEY,YACnBZ,MAvBI,4CAAZ,0DAmCI0H,EAAU,uCAAG,WACxBpD,EACAqD,GAFwB,iBAAA1C,EAAA,6DAIlBzF,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,OACRjD,KAAMkD,KAAKC,UAAUsC,GACrB3B,QAAS,CAAC,CAAC,gBAAiBxG,KARN,SAUD8F,MAAM,qBAAsBJ,GAV3B,iBAWVM,GAXU,0CAYf,GAZe,iCAcf,GAde,4CAAH,wDA0BVoC,EAAO,uCAAG,WAAOtD,EAAYpE,GAAnB,uBAAA+E,EAAA,0DACjB/F,EADiB,yCAEZmI,EAASxH,YAAY,GAAG,IAFZ,cAIfL,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,MACRa,QAAS,CAAC,CAAC,gBAAiBxG,KAExBqI,EAAM,0BAA4B3H,EATnB,SAUEoF,MAAMuC,EAAK3C,GAVb,YAUfK,EAVe,QAWRC,GAXQ,kCAYMD,EAASU,OAZf,eAYbsB,EAZa,QAad3G,WAAa,IAAI6G,KAAKF,EAAK3G,YAC5B2G,EAAKzG,eACPgB,QAAQC,IAAIwF,EAAKzG,cAGjByG,EAAKzG,aAAeyG,EAAKzG,aAAa0G,KAAI,SAACxH,GAAD,mBAAC,eACtCA,GADqC,IAExCoB,YAAa,IAAIqG,KAAKzH,EAAEoB,mBApBT,kBAuBZmG,GAvBY,iCAyBZ,MAzBY,4CAAH,wDAoCPO,EAAuB,uCAAG,WACrCC,EACAC,EACA1D,GAHqC,iBAAAW,EAAA,0DAKjC/F,EALiC,0CAKnB,GALmB,cAM/BM,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,OACRa,QAAS,CAAC,CAAC,gBAAiBxG,IAC5B0C,KAAMkD,KAAKC,UAAU,CAAE2C,gBAAeD,eAVH,SAYdzC,MAAM,+BAAgCJ,GAZxB,iBAavBM,GAbuB,2CAc5B,GAd4B,kCAgB5B,GAhB4B,4CAAH,0DA2BvByC,EAAW,uCAAG,WACzB3D,EACAiC,EACA2B,GAHyB,iBAAAjD,EAAA,0DAKrB/F,EALqB,0CAMhB,GANgB,cAQnBM,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,OACRa,QAAS,CAAC,CAAC,gBAAiBxG,IAC5B0C,KAAMkD,KAAKC,UAAU,CAAEkB,SAAQ2B,eAZR,SAcF5C,MAAM,4BAA6BJ,GAdjC,iBAeXM,GAfW,2CAgBhB,GAhBgB,kCAkBhB,GAlBgB,4CAAH,0DA2BX2C,EAAY,uCAAG,WAAO7D,GAAP,qBAAAW,EAAA,0DACtB/F,EADsB,yCAEjBmI,EAASxH,YAAY,KAFJ,cAIpBL,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,MACRa,QAAS,CAAC,CAAC,gBAAiBxG,KAPJ,SASH8F,MAAM,oBAAqBJ,GATxB,WASpBK,EAToB,QAUZC,GAVY,6BAWxB1D,QAXwB,UAWNyD,EAASE,OAXH,+BAWhB1D,IAXgB,gBAYlB,IAAIlD,MAAM,WAZQ,yBAcC0G,EAASU,OAdV,eAexBsB,GADIA,EAdoB,QAeZC,KAAI,SAACY,GAAD,mBAAC,eACZA,GADW,IAEdxH,WAAY,IAAI6G,KAAKW,EAAKxH,iBAE5BkB,QAAQC,IAAIwF,GAnBY,kBAoBjBA,GApBiB,4CAAH,sDA6BZc,EAAmB,uCAAG,WACjC/D,GADiC,qBAAAW,EAAA,0DAG7B/F,EAH6B,yCAIxBmI,EAAS5F,mBAAmB,KAJJ,cAM3BjC,EAAQ8E,EAAK9E,MAAQ8E,EAAK9E,MAAQ,GAClC0F,EAA2B,CAC/BC,OAAQ,MACRa,QAAS,CAAC,CAAC,gBAAiBxG,KATG,SAWV8F,MAAM,2BAA4BJ,GAXxB,WAW3BK,EAX2B,QAYnBC,GAZmB,uBAazB,IAAI3G,MAAM,WAbe,yBAeK0G,EAASU,OAfd,eAgB/BsB,GADIA,EAf2B,QAgBnBC,KAAI,SAACY,GAAD,mBAAC,eACZA,GADW,IAEdhH,YAAa,IAAIqG,KAAKW,EAAKhH,kBAE7BU,QAAQC,IAAIwF,GApBmB,kBAqBxBA,GArBwB,4CAAH,sDAyBnBe,EAAQ,uCAAG,WACtBX,EACArD,EACAiE,EACAC,GAJsB,eAAAvD,EAAA,0DAMlB/F,EANkB,0CAOb,GAPa,WASlBoF,IAAQA,EAAK9E,MATK,wBAUd0F,EAA2B,CAC/BC,OAAQ,OACRjD,KAAMkD,KAAKC,UAAU,CACnBkB,OAAQoB,EAAKzH,GACbqI,SAAUA,EACVC,eAAgBA,IAElBxC,QAAS,CAAC,CAAC,gBAAiB1B,EAAK9E,SAjBf,SAmBG8F,MAAM,gBAAiBJ,GAnB1B,iBAoBNM,GApBM,2CAqBX,GArBW,kCAsBN,GAtBM,0DAuBR,GAvBQ,4CAAH,4DCtMrB,SAASiD,EAAgBxG,GAAmB,IAAD,EACXE,oBAAS,GADE,mBAClCuG,EADkC,KACzBC,EADyB,OAEfxG,mBAASF,EAAM0F,KAAKvH,OAFL,mBAElCA,EAFkC,KAE3BwI,EAF2B,OAGHzG,mBAASF,EAAM0F,KAAKpH,aAHjB,mBAGlCA,EAHkC,KAGrBsI,EAHqB,OAIf1G,mBAAS,IAJM,mBAIlC2G,EAJkC,KAI3BC,EAJ2B,OAKX5G,mBAAS,IALE,mBAKlC6G,EALkC,KAKzBC,EALyB,KAMnC3E,EAAO4E,qBAAWnF,GAClBrE,EACJuC,EAAM0F,KAAKjI,UAAoC,SAAxBuC,EAAM0F,KAAKjI,SAC9BuC,EAAM0F,KAAKjI,SACX,GAEAyJ,EAAkB,uCAAG,sBAAAlE,EAAA,0DACrBX,EADqB,gCAEDgE,EAASrG,EAAM0F,KAAMrD,EAAKA,KAAMlE,EAAOG,GAFtC,cAMrB0I,EAAW,gCAFXF,EAAS,+CAJY,2CAAH,qDAWxB,OACE,mCACE,sBAAK9F,UAAU,YAAf,UACG6F,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC9CE,GAAW,qBAAK/F,UAAU,sBAAf,SAAsC+F,IAClD,qBAAI/F,UAAU,YAAd,UACGyF,EACC,8BACE,uBACEzF,UAAU,eACVvC,KAAK,OACL6C,MAAOnD,EACPkD,SAAU,SAACV,GACTgG,EAAShG,EAAElB,OAAO6B,YAKxBnD,EAED6B,EAAMmH,QAAUV,GACf,wBACEzF,UAAU,sCACVU,QAAS,WACPgF,GAAW,IAHf,qBAUJ,oBAAG1F,UAAU,GAAb,UACGhB,EAAM0F,KAAK/G,WAAWyI,qBACtB,MAAQ3J,KAEX,oBAAIuD,UAAU,SACbyF,EACC,8BACE,0BACEY,KAAM,GACNrG,UAAU,eACVM,MAAOhD,EACP+C,SAAU,SAACV,GACTiG,EAAejG,EAAElB,OAAO6B,YAK9BhD,EAAYgJ,MAAM,MAAM/B,KAAI,SAACgC,GAAD,OAC1B,mBAAavG,UAAU,OAAvB,SACGuG,GADKA,MAKXvH,EAAMmH,OAASV,GACd,sBAAKzF,UAAU,eAAf,UACE,wBACEA,UAAU,kBACVU,QAAS,WACPwF,IACAR,GAAW,IAJf,sBASA,wBACE1F,UAAU,yBACVU,QAAS,WACPgF,GAAW,GACXC,EAAS3G,EAAM0F,KAAKvH,OACpByI,EAAe5G,EAAM0F,KAAKpH,cAL9B,6BAqBL,SAASkJ,EAAYxH,GAAe,IAAD,EACdE,mBAAS,IADK,mBACjC2G,EADiC,KAC1BC,EAD0B,OAEV5G,oBAAS,GAFC,mBAEjCoC,EAFiC,KAExBmF,EAFwB,OAGJvH,mBAASF,EAAM0F,KAAK7G,cAHhB,mBAGjC6I,EAHiC,KAGrBC,EAHqB,OAIdzH,mBAAS,IAJK,mBAIjC0H,EAJiC,KAI1BC,EAJ0B,OAKN3H,mBAAS,QALH,mBAKjC4H,EALiC,KAKtBC,EALsB,KAOxCC,qBAAU,WACR,GAAkB,SAAdF,EAAsB,CAAC,IAAD,EAClBG,EAAkB,UAAGjI,EAAM0F,KAAK7G,oBAAd,aAAG,EAAyB0F,QAClD,SAAC2D,GAAD,OAAiBA,EAAYlJ,cAAcmJ,SAASP,MAEtDD,EAAcM,QACT,GAAiB,aAAbH,EAA0B,CAAC,IAAD,EAC7BG,EAAkB,UAAGjI,EAAM0F,KAAK7G,oBAAd,aAAG,EAAyB0F,QAClD,SAAC2D,GAAD,OAAiBA,EAAYhJ,qBAAuB0I,KAEtDD,EAAcM,MAEf,CAACL,EAAOE,IACX,IAAMM,EAAuB,SAC3BtC,EACAC,GAEI9I,IACJwK,GAAW,GACX5B,EAAwBC,EAAWC,EAAe/F,EAAMqC,MAAMoB,MAC5D,SAACsD,GACKA,EACF/G,EAAMqI,UAENvB,EAAS,gDAEXW,GAAW,QAKjB,OAAInF,EACK,cAAC,EAAD,IAELoF,EAEA,sBAAK1G,UAAU,qCAAf,UACE,cAACwF,EAAD,2BAAqBxG,GAArB,IAA4BmH,OAAO,KAClCN,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC/C,oBAAI7F,UAAU,MAAd,uBACA,mBAAGA,UAAU,iBAAb,gqBAYe,SAAd8G,GACC,qBAAK9G,UAAU,iBAAf,SACE,uBAAOG,QAAQ,GAAf,SACE,uBACEK,YAAY,oBACZ/C,KAAK,OACLuC,UAAU,eACVM,MAAOsG,EACPvG,SAAU,SAACV,GACTkH,EAASlH,EAAElB,OAAO6B,cAM5B,qBAAKN,UAAU,iBAAf,SACE,uBAAOG,QAAQ,GAAf,SACE,yBACEH,UAAU,eACVK,SAAU,SAACV,GACT,IAAMW,EAAQX,EAAElB,OAAO6B,MAEnByG,EADM,WAAVzG,GAAgC,WAAVA,EACL,YACA,QACKuG,EAAR,SAAVvG,EAA2BA,EACjB,KARlB,UAWE,wBAAQA,MAAM,OAAd,6BACA,wBAAQA,MAAM,SAAd,yBACA,wBAAQA,MAAM,SAAd,gCAIN,wBAAON,UAAU,0CAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,sCACA,2CACA,sCACA,2CACA,wCACA,6CAGJ,gCACG0G,EACEnD,QACC,SAAC2D,GAAD,MAAmD,cAAlCA,EAAY9I,qBAE9BmG,KAAI,SAAC2C,GAAD,OACH,qBAEEI,MAAO,CACLC,gBACgC,aAA9BL,EAAY7I,cACR,yBACA,wBANV,UASE,6BAAK6I,EAAYlJ,gBACjB,+BACGZ,OAAWC,WADd,KAC4B6J,EAAYhJ,mBADxC,OAGA,6BAAKgJ,EAAY/I,YAAYiI,uBAC7B,6BAAKhJ,UAAcoK,SACnB,oBACEF,MAAO,CACLG,WAAY,QAFhB,SAKGP,EAAY9I,oBAEf,qBAAI4B,UAAU,kBAAd,UACE,sBACEU,QAAS,kBACP0G,EAAqB,WAAYF,EAAYjK,KAFjD,sBAOA,sBACEyD,QAAS,kBACP0G,EAAqB,SAAUF,EAAYjK,KAF/C,oBAOA,sBACEyD,QAAS,kBACP0G,EAAqB,aAAcF,EAAYjK,KAFnD,wBAOA,sBACEyD,QAAS,kBACP0G,EAAqB,YAAaF,EAAYjK,KAFlD,4BA3CGiK,EAAYjK,eAyDnB,iDAOT,SAASyK,EAAe1I,GAAe,IAAD,EACrC2I,EAAU,UAAG3I,EAAMqC,KAAKxD,oBAAd,aAAG,EAAyBsJ,SAASnI,EAAM0F,KAAKzH,IADrB,EAEjBiC,mBAAS,IAFQ,mBAEpC2G,EAFoC,KAE7BC,EAF6B,OAGT5G,mBAAS,UAHA,mBAGpC+F,EAHoC,KAGzB2C,EAHyB,OAIb1I,oBAAS,GAJI,mBAIpCoC,EAJoC,KAI3BmF,EAJ2B,KAKrCoB,EAAM5B,qBAAWnF,GAEjBgH,EAAY,uCAAG,WAAOnI,GAAP,SAAAqC,EAAA,6DACnBrC,EAAEC,iBACF6G,GAAW,GAFQ,SAGGzB,EAAYhG,EAAMqC,KAAMrC,EAAM0F,KAAKzH,GAAIgI,GAH1C,eAKd,OAAH4C,QAAG,IAAHA,KAAK9D,iBAAiB/E,EAAM0F,KAAKzH,IACjCwJ,GAAW,GACXzH,EAAMqI,YAENvB,EAAS,uDACTW,GAAW,IAVM,2CAAH,sDAaZsB,EAAOJ,EACX,qBAAK3H,UAAU,mBAAf,kEAIA,uBAAME,SAAU4H,EAAhB,UACE,kCACE,wBAAO3H,QAAQ,YAAf,uBAEE,yBACEH,UAAU,eACV/C,GAAG,YACHqD,MAAO2E,EACP5E,SAAU,SAACV,GAAD,OAAOiI,EAAajI,EAAElB,OAAO6B,QAJzC,UAME,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,4BAIN,uBAAO7C,KAAK,SAAS6C,MAAM,SAASN,UAAU,uBAGlD,OAAIsB,EACK,cAAC,EAAD,IAGP,sBAAKtB,UAAU,yCAAf,UACE,cAACwF,EAAD,2BAAqBxG,GAArB,IAA4BmH,OAAO,KAClCN,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC9CkC,K,QCpQQC,IChGXC,EAAOC,EDgGIF,EA9Ef,SAAqBhJ,GAAyB,IAYxCqC,EAZuC,EACjBnC,mBAAS,IADQ,mBACpC2G,EADoC,KAC7BC,EAD6B,OAEnB5G,mBAAsB,MAFH,mBAEpCwF,EAFoC,KAE9ByD,EAF8B,OAGbjJ,oBAAS,GAHI,mBAGpCkJ,EAHoC,KAG3BC,EAH2B,OAIbnJ,oBAAS,GAJI,mBAIpCoC,EAJoC,KAI3BmF,EAJ2B,KAKrCoB,EAAM5B,qBAAWnF,GAIT7D,EAEV+B,EAHFsJ,MACEC,OAAUtL,GAIV4K,IACFxG,EAAOwG,EAAIxG,MAGb2F,qBAAU,WACRP,GAAW,GACPpF,GACFsD,EAAQtD,EAAMpE,GACXwF,MAAK,SAAC6B,GACDA,GACFzF,QAAQC,IAAIwF,GACZ6D,EAAQ7D,GACRmC,GAAW,KAEXX,EAAS,yCACTW,GAAW,OAGd/D,OAAM,kBAAMoD,EAAS,8CAEzB,IAEHkB,qBAAU,WAAO,IAAD,GACN,QAAJ,EAAA3F,SAAA,eAAM7E,QAAN,OAAckI,QAAd,IAAcA,OAAd,EAAcA,EAAMxH,QACtBmL,GAAW,GAEXA,GAAW,KAEZ,CAACA,EAAYhH,EAAMqD,IAEtB,IAAM8D,EAAkB,WACtB/B,GAAW,GACPpF,GACFsD,EAAQtD,EAAMpE,GACXwF,MAAK,SAAC6B,GACDA,GACF6D,EAAQ7D,GACRmC,GAAW,KAEXX,EAAS,yCACTW,GAAW,OAGd/D,OAAM,kBAAMoD,EAAS,6CAI5B,OAAIxE,EACK,cAAC,EAAD,IAGLuE,EACK,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAE1CxE,GAAQqD,EACN0D,EACK,cAAC5B,EAAD,CAAaa,QAASmB,EAAiBnH,KAAMA,EAAMqD,KAAMA,IAG9D,cAACgD,EAAD,CAAgBL,QAASmB,EAAiBnH,KAAMA,EAAMqD,KAAMA,IAGpD,6BAAKmB,K,QC3FrB,SAAS4C,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUlK,GAAU,IAAK,IAAI1B,EAAI,EAAGA,EAAI6L,UAAUC,OAAQ9L,IAAK,CAAE,IAAI+L,EAASF,UAAU7L,GAAI,IAAK,IAAIgM,KAAOD,EAAcJ,OAAOM,UAAUC,eAAevE,KAAKoE,EAAQC,KAAQtK,EAAOsK,GAAOD,EAAOC,IAAY,OAAOtK,IAA2ByK,MAAMxF,KAAMkF,WAEhT,SAASO,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEC,EAAKhM,EAAnE0B,EAEzF,SAAuCqK,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DC,EAAKhM,EAA5D0B,EAAS,GAAQ4K,EAAaX,OAAOY,KAAKR,GAAqB,IAAK/L,EAAI,EAAGA,EAAIsM,EAAWR,OAAQ9L,IAAOgM,EAAMM,EAAWtM,GAAQqM,EAASG,QAAQR,IAAQ,IAAatK,EAAOsK,GAAOD,EAAOC,IAAQ,OAAOtK,EAFxM+K,CAA8BV,EAAQM,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBX,GAAS,IAAK/L,EAAI,EAAGA,EAAI2M,EAAiBb,OAAQ9L,IAAOgM,EAAMW,EAAiB3M,GAAQqM,EAASG,QAAQR,IAAQ,GAAkBL,OAAOM,UAAUW,qBAAqBjF,KAAKoE,EAAQC,KAAgBtK,EAAOsK,GAAOD,EAAOC,IAAU,OAAOtK,EAMne,SAASmL,GAAYC,EAAMC,GACzB,IAAI3M,EAAQ0M,EAAK1M,MACb4M,EAAUF,EAAKE,QACf/K,EAAQmK,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOpB,EAAS,CACtDuB,MAAO,6BACPC,OAAQ,GACRC,QAAS,YACTC,MAAO,GACPC,IAAKN,EACL,kBAAmBC,GAClB/K,GAAQ7B,EAAqB,gBAAoB,QAAS,CAC3DF,GAAI8M,GACH5M,GAAS,KAAM8K,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EoC,EAAG,gBACHC,KAAM,UACHpC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEmC,EAAG,kEAIP,IChCI,GAAO,GDgCPE,GAA0B,aAAiBX,IAChC,IC/Bf,SAAS,KAA2Q,OAA9P,GAAWlB,OAAOC,QAAU,SAAUlK,GAAU,IAAK,IAAI1B,EAAI,EAAGA,EAAI6L,UAAUC,OAAQ9L,IAAK,CAAE,IAAI+L,EAASF,UAAU7L,GAAI,IAAK,IAAIgM,KAAOD,EAAcJ,OAAOM,UAAUC,eAAevE,KAAKoE,EAAQC,KAAQtK,EAAOsK,GAAOD,EAAOC,IAAY,OAAOtK,IAA2ByK,MAAMxF,KAAMkF,WAEhT,SAAS,GAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEC,EAAKhM,EAAnE0B,EAEzF,SAAuCqK,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DC,EAAKhM,EAA5D0B,EAAS,GAAQ4K,EAAaX,OAAOY,KAAKR,GAAqB,IAAK/L,EAAI,EAAGA,EAAIsM,EAAWR,OAAQ9L,IAAOgM,EAAMM,EAAWtM,GAAQqM,EAASG,QAAQR,IAAQ,IAAatK,EAAOsK,GAAOD,EAAOC,IAAQ,OAAOtK,EAFxM,CAA8BqK,EAAQM,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBX,GAAS,IAAK/L,EAAI,EAAGA,EAAI2M,EAAiBb,OAAQ9L,IAAOgM,EAAMW,EAAiB3M,GAAQqM,EAASG,QAAQR,IAAQ,GAAkBL,OAAOM,UAAUW,qBAAqBjF,KAAKoE,EAAQC,KAAgBtK,EAAOsK,GAAOD,EAAOC,IAAU,OAAOtK,EAMne,SAAS+L,GAAUX,EAAMC,GACvB,IAAI3M,EAAQ0M,EAAK1M,MACb4M,EAAUF,EAAKE,QACf/K,EAAQ,GAAyB6K,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDG,MAAO,6BACPC,OAAQ,GACRC,QAAS,YACTC,MAAO,GACPC,IAAKN,EACL,kBAAmBC,GAClB/K,GAAQ7B,EAAqB,gBAAoB,QAAS,CAC3DF,GAAI8M,GACH5M,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EkN,EAAG,kBACHC,KAAM,UACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChED,EAAG,iPAIP,IChCI,GAAO,GDgCP,GAA0B,aAAiBG,IAChC,IC/Bf,SAAS,KAA2Q,OAA9P,GAAW9B,OAAOC,QAAU,SAAUlK,GAAU,IAAK,IAAI1B,EAAI,EAAGA,EAAI6L,UAAUC,OAAQ9L,IAAK,CAAE,IAAI+L,EAASF,UAAU7L,GAAI,IAAK,IAAIgM,KAAOD,EAAcJ,OAAOM,UAAUC,eAAevE,KAAKoE,EAAQC,KAAQtK,EAAOsK,GAAOD,EAAOC,IAAY,OAAOtK,IAA2ByK,MAAMxF,KAAMkF,WAEhT,SAAS,GAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEC,EAAKhM,EAAnE0B,EAEzF,SAAuCqK,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DC,EAAKhM,EAA5D0B,EAAS,GAAQ4K,EAAaX,OAAOY,KAAKR,GAAqB,IAAK/L,EAAI,EAAGA,EAAIsM,EAAWR,OAAQ9L,IAAOgM,EAAMM,EAAWtM,GAAQqM,EAASG,QAAQR,IAAQ,IAAatK,EAAOsK,GAAOD,EAAOC,IAAQ,OAAOtK,EAFxM,CAA8BqK,EAAQM,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBX,GAAS,IAAK/L,EAAI,EAAGA,EAAI2M,EAAiBb,OAAQ9L,IAAOgM,EAAMW,EAAiB3M,GAAQqM,EAASG,QAAQR,IAAQ,GAAkBL,OAAOM,UAAUW,qBAAqBjF,KAAKoE,EAAQC,KAAgBtK,EAAOsK,GAAOD,EAAOC,IAAU,OAAOtK,EAMne,SAASgM,GAAOZ,EAAMC,GACpB,IAAI3M,EAAQ0M,EAAK1M,MACb4M,EAAUF,EAAKE,QACf/K,EAAQ,GAAyB6K,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDG,MAAO,6BACPC,OAAQ,GACRC,QAAS,YACTC,MAAO,GACPC,IAAKN,EACL,kBAAmBC,GAClB/K,GAAQ7B,EAAqB,gBAAoB,QAAS,CAC3DF,GAAI8M,GACH5M,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EkN,EAAG,gBACHC,KAAM,UACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChED,EAAG,0CAIP,IAAI,GAA0B,aAAiBI,IAChC,ICAA,IADf,ICvBaC,GAAeC,GACfC,GAAaC,GACbC,GAAUC,GC6GRC,OA1Gf,SAAiBhM,GAAe,IAa1BiM,EAbyB,EACC/L,oBAAS,GADV,mBACtBgM,EADsB,KACbC,EADa,OAEHjM,mBAAS,IAFN,mBAEtB/B,EAFsB,KAEfwI,EAFe,OAGSzG,mBAAS,IAHlB,mBAGtB5B,EAHsB,KAGT8N,EAHS,KAYvBvD,EAAM5B,qBAAWnF,GAEvB,GAAI+G,EAAK,CAAC,IACAxG,EAASwG,EAATxG,KACR4J,EACE,sBAAKjL,UAAU,gBAAf,UACE,+CACA,uBAAME,SAfS,SAACP,GACpBA,EAAEC,iBACF,IAAMyL,EAAyB,CAAElO,QAAOG,eACxC0B,EAAMsM,QAAQD,GACd1F,EAAS,IACTyF,EAAe,IACfD,GAAW,IASuBnL,UAAU,WAAxC,UACE,uBAAOuL,YAAa,EAApB,SACE,kCACE,+BACE,6BACE,uBAAOpL,QAAQ,QAAf,uBAEF,6BACE,uBACE1C,KAAK,OACLR,GAAG,QACHqD,MAAOnD,EACPkD,SAAU,gBAAaC,EAAb,EAAG7B,OAAU6B,MAAb,OAA2BqF,EAASrF,WAIpD,+BACE,6BACE,uBAAOH,QAAQ,cAAf,6BAEF,6BACE,0BACEqL,KAAM,GACNvO,GAAG,cACHqD,MAAOhD,EACP+C,SAAU,gBAAaC,EAAb,EAAG7B,OAAU6B,MAAb,OAA2B8K,EAAe9K,WAI1D,+BACE,6BACE,uBAAOH,QAAQ,OAAf,sBAEF,6BACE,uBAAO1C,KAAK,OAAOgO,UAAQ,EAACnL,MAAOe,EAAK1E,mBAGtB,aAArB0E,EAAK1E,aACJ,+BACE,6BACE,uBAAOwD,QAAQ,WAAf,gCAEF,6BACE,uBACE1C,KAAK,OACLR,GAAG,WACHwO,UAAQ,EACRnL,MAAOe,EAAK5E,qBAOxB,uBAAOuD,UAAU,mBAAjB,uKAKA,sBAAKA,UAAU,UAAf,UACE,uBAAOvC,KAAK,SAAS6C,MAAM,SAASN,UAAU,oBAC9C,wBACEA,UAAU,oBACVU,QAAS,WACPiF,EAAS,IACTyF,EAAe,IACfD,GAAW,IALf,8BAeV,OACE,sBAAKnL,UAAU,sBAAf,UACE,qBAAKA,UAAU,eAAesH,MAAO,CAAEC,gBAAiB,UACxD,qBAAKvH,UAAU,eAAeU,QAAS,kBAAMyK,GAAW,IAAxD,SACE,cAACL,GAAD,MAEDI,GAAWD,MCnDHS,OAtDf,SAAkB1M,GAAc,IAAD,EACvB2M,EAAwC,aAAf3M,EAAMvB,KAAsB,OAAS,SAC9DoK,EAAM5B,qBAAWnF,GACjBO,EAAsB,OAAGwG,QAAH,IAAGA,OAAH,EAAGA,EAAKxG,KAC9ByC,EAAyC,OAAG+D,QAAH,IAAGA,OAAH,EAAGA,EAAK/D,cAEjD8H,EAAU,OAAGvK,QAAH,IAAGA,GAAH,UAAGA,EAAM3E,iBAAT,aAAG,EAAiByK,SAASnI,EAAM/B,IAEnD,OACE,sBAAK+C,UAAU,sBAAf,UACE,sBACEA,UAAU,eACVsH,MAAO,CAAEC,gBAAiBoE,GAF5B,UAIG3M,EAAMvB,KACP,qBACEuC,UACE4L,EAAa,kCAAoC,gBAEnDlL,QAAS,WACHkL,GAAcvK,EAEhByC,GAAiBA,EAAc,SAAU9E,EAAM/B,IAIjD6G,GAAiBA,EAAc,MAAO9E,EAAM/B,KAXhD,SAcE,cAACyN,GAAD,SAGJ,sBAAK1K,UAAU,WAAf,UACE,8BACE,6BAAKhB,EAAM7B,UAEG,aAAf6B,EAAMvB,MACL,8BACE,+BAAOuB,EAAMvC,aAGjB,8BACE,+BAAOuC,EAAMrB,WAAWyI,4BAG5B,qBAAKpG,UAAU,eAAf,SACE,wBAAQA,UAAU,kBAAlB,SACE,cAAC,IAAD,CAAM6L,GAAE,gBAAW7M,EAAM/B,IAAzB,2B,QCgEK6O,OAjGf,SAAmB9M,GAAe,IAa5BC,EAb2B,EACGC,mBAAoB,SADvB,mBACxB4H,EADwB,KACbC,EADa,OAEL7H,mBAAS,IAFJ,mBAExB0H,EAFwB,KAEjBC,EAFiB,OAGO3H,mBAAS,IAHhB,mBAGxB6M,EAHwB,KAGXC,EAHW,KAc/B,OATAhF,qBAAU,WAGRhI,EAAM+H,aAAaD,GACnB9H,EAAM6H,SAASD,GACf5H,EAAMiN,iBAAiBF,KACtB,CAACjF,EAAWF,EAAOmF,IAGdjF,GACN,IAAK,WACH7H,EACE,sBAAKe,UAAU,cAAf,UACE,oCACE,uBACEvC,KAAK,OACL+C,YAAY,eACZF,MAAOsG,EACPvG,SAAU,SAACV,GACTkH,EAASlH,EAAElB,OAAO6B,UAGtB,cAACsK,GAAD,OAEF,oCACE,uBACEnN,KAAK,OACL+C,YAAY,uBACZF,MAAOyL,EACP1L,SAAU,SAACV,GACTqM,EAAerM,EAAElB,OAAO6B,UAG5B,cAACsK,GAAD,UAIN,MACF,IAAK,WAkBL,IAAK,QACH3L,EACE,qBAAKe,UAAU,cAAf,SACE,oCACG,IACD,uBACEvC,KAAK,OACL+C,YAAY,eACZF,MAAOsG,EACPvG,SAAU,SAACV,GACTkH,EAASlH,EAAElB,OAAO6B,UAGtB,cAACsK,GAAD,SAMV,OACE,sBAAK5K,UAAU,uBAAf,UACGf,EACD,yBACEqB,MAAOwG,EACPzG,SAAU,SAACV,GAhGnB,IAAqBc,EAiGXsG,EAhGI,cADOtG,EAiGcd,EAAElB,OAAO6B,OAhGX,WACnB,aAARG,EAA2B,WACH,UA2FxB,UAME,wBAAQH,MAAM,WAAd,0BACA,wBAAQA,MAAM,WAAd,0BACA,wBAAQA,MAAM,QAAd,qCCjGR,SAAS4L,GACPlK,EACAmK,EACAzP,GAEA,OAAKA,EAIAA,EAAUyK,SAASnF,EAAE/E,KAAOP,EAAUyK,SAASgF,EAAElP,MAChDP,EAAUyK,SAASnF,EAAE/E,MAAQP,EAAUyK,SAASgF,EAAElP,IAEhD+E,EAAErE,WAAawO,EAAExO,WACZ,GAEC,EAGNjB,EAAUyK,SAASnF,EAAE/E,KACf,EAED,EAfJ,EAuIImP,OA/Gf,WAAsB,IAAD,EACOlN,mBAAiB,IADxB,mBACZmN,EADY,KACLC,EADK,OAEOpN,mBAAwB,MAF/B,mBAEZ2G,EAFY,KAELC,EAFK,OAGuB5G,mBAAiB,IAHxC,mBAGZqN,EAHY,KAGGC,EAHH,OAIetN,mBAAoB,SAJnC,mBAIZ4H,EAJY,KAIDC,EAJC,OAKO7H,mBAAiB,IALxB,mBAKZ0H,EALY,KAKLC,EALK,OAMuB3H,mBAAiB,IANxC,mBAMZuN,EANY,KAMGR,EANH,OAOa/M,oBAAS,GAPtB,mBAOZoC,EAPY,KAOHoL,EAPG,KAQb7E,EAAM5B,qBAAWnF,GACjBO,EAAI,OAAGwG,QAAH,IAAGA,OAAH,EAAGA,EAAKxG,KAaZiK,EAAO,uCAAG,WAAO5G,GAAP,SAAA1C,EAAA,0DACV/F,EADU,qDAIVoF,EAJU,gCAKUoD,EAAWpD,EAAMqD,GAAMhC,OAAM,WACjD,OAAO,KANG,cAVdwB,IACGzB,MAAK,SAAC6B,GACLgI,EAAShI,GACTkI,EAAiBlI,MAElB5B,OAAM,WACLoD,EAAS,qCAeTA,EAAS,2CAXC,2CAAH,sDAoEb,OApDAkB,qBAAU,WAGNwF,EADgB,UAAd1F,EAEAuF,EAAM9I,QAAO,SAACmB,GACZ,OAAOA,EAAKvH,MAAMgK,SAASP,MAGR,aAAdE,EAEPuF,EAAM9I,QACJ,SAACmB,GAAD,YACgB,aAAdA,EAAKjH,OAAL,UACAiH,EAAKjI,gBADL,aACA,EAAe0K,SAASsF,KACxB/H,EAAKvH,MAAMgK,SAASP,MAGH,aAAdE,EAEPuF,EAAM9I,QACJ,SAACmB,GAAD,MAAwB,aAAdA,EAAKjH,MAAuBiH,EAAKvH,MAAMgK,SAASP,MAI7CyF,KAElB,CAACzF,EAAOE,EAAW2F,EAAeJ,IAErCrF,qBAAU,WAER0F,GAAa,GACbxI,IACGzB,MAAK,SAAC6B,GACLA,EAAOA,EAAKqI,MAAK,SAAC3K,EAAGmK,GAAJ,OAAUD,GAAiBlK,EAAGmK,EAAJ,OAAO9K,QAAP,IAAOA,OAAP,EAAOA,EAAM3E,cACxD4P,EAAShI,GACTkI,EAAiBlI,GACjBoI,GAAa,MAEdhK,OAAM,SAAC/C,GACNmG,EAAS,SACT4G,GAAa,QAEhB,IAEH1F,qBAAU,WAER,IAAM4F,EAAkBP,EAAMM,MAAK,SAAC3K,EAAGmK,GAAJ,OACjCD,GAAiBlK,EAAGmK,EAAJ,OAAO9K,QAAP,IAAOA,OAAP,EAAOA,EAAM3E,cAE/B4P,EAAS,YAAIM,MACZ,CAAC/E,IAEAvG,EAAgB,cAAC,EAAD,IAGlB,sBAAKtB,UAAU,YAAf,UACG6F,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC/C,cAAC,GAAD,CACEgB,SAAUA,EACVE,aAAcA,EACdkF,iBAAkBA,IAEpB,sBAAKjM,UAAU,QAAf,UACG6F,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC9Ce,EAAQ,6BAAQ,cAAC,GAAD,CAAS0E,QAASA,IAClCiB,EAAchI,KAAI,SAACG,GAAD,OACjB,cAAC,GAAD,eAA4BA,GAAbA,EAAKzH,cClJjB4P,GAAmB,SAACC,GAC/B,OAAQA,GACN,IAAK,aACH,MAAO,QACT,IAAK,SACH,MAAO,SACT,IAAK,WACH,MAAO,OACT,IAAK,YACH,MAAO,Q,QCkDEC,OAtDf,WAA2B,IAAD,EACgB7N,mBAA4B,IAD5C,mBACjBrB,EADiB,KACHmP,EADG,OAEE9N,mBAAS,IAFX,mBAEjB2G,EAFiB,KAEVC,EAFU,OAGM5G,oBAAS,GAHf,mBAGjBoC,EAHiB,KAGRmF,EAHQ,KAIlBoB,EAAM5B,qBAAWnF,GACvBkG,qBAAU,WACRP,GAAW,GACPoB,GACFzC,EAAoByC,EAAIxG,MACrBoB,MAAK,SAAC6B,GACL0I,EAAgB1I,GAChBmC,GAAW,MAEZ/D,OAAM,SAAC/D,GACNmH,EAAS,iDACTW,GAAW,QAGhB,IACH,IAAMwG,EAAmBpP,EAAa0G,KAAI,SAAC2C,GAAD,iBACxC,+BACE,uCAAKA,EAAYzI,cAAjB,aAAK,EAAoBtB,QACzB,6BAAK+J,EAAY/I,YAAYiI,uBAC7B,uCAAKc,EAAYzI,cAAjB,aAAK,EAAoBhB,OACzB,oBAAI6J,MAAO,CAAEzG,MAAOgM,GAAiB3F,EAAY9I,oBAAjD,SACG8I,EAAY9I,oBAEf,oBAAI4B,UAAU,eAAd,SACE,mBAAGkN,KAAI,0BAAWhG,EAAYzI,cAAvB,aAAW,EAAoBxB,IAAtC,4BARKiK,EAAYjK,OAavB,OAAIqE,EAAgB,cAAC,EAAD,IAElB,sBAAKtB,UAAU,kCAAf,UACE,oBAAIA,UAAU,mBAAd,yBACC6F,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC/C,wBAAO7F,UAAU,0CAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,wCACA,sCACA,sCACA,uCACA,2CAGJ,gCAAQnC,GAAgBoP,W,QCAjBE,OAjDf,WAAoB,IAAD,EACSjO,mBAAiB,IAD1B,mBACVkO,EADU,KACHC,EADG,OAESnO,mBAAS,IAFlB,mBAEV2G,EAFU,KAEHC,EAFG,OAGa5G,oBAAS,GAHtB,mBAGVoC,EAHU,KAGDmF,EAHC,KAIXoB,EAAM5B,qBAAWnF,GACvBkG,qBAAU,WACRP,GAAW,GACPoB,GACF3C,EAAa2C,EAAIxG,MACdoB,MAAK,SAAC6B,GACL+I,EAAS/I,GACTmC,GAAW,MAEZ/D,OAAM,SAAC/D,GACNmH,EAAS,iDACTW,GAAW,QAGhB,IACH,IAAM6G,EAAYF,EAAM7I,KAAI,SAACY,GAAD,aAC1B,+BACE,6BAAKA,EAAKhI,QACV,6BAAKgI,EAAKxH,WAAWyI,uBACrB,uCAAKjB,EAAKtH,oBAAV,aAAK,EAAmBgL,SACxB,oBAAI7I,UAAU,eAAd,SACE,mBAAGkN,KAAI,gBAAW/H,EAAKlI,IAAvB,4BALKkI,EAAKlI,OAShB,OAAIqE,EAAgB,cAAC,EAAD,IAElB,sBAAKtB,UAAU,2BAAf,UACE,oBAAIA,UAAU,mBAAd,kBACC6F,GAAS,qBAAK7F,UAAU,qBAAf,SAAqC6F,IAC/C,wBAAO7F,UAAU,0CAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,wCACA,sCACA,6CACA,2CAGJ,gCAAQoN,GAASE,W,4BCRVC,OAtCf,WACE,IAAMlM,EAAO4E,qBAAWnF,GACxB,OACE,eAAC,KAAD,CAAc0M,OAAO,KAAKC,GAAG,QAA7B,UACE,cAAC,KAAaC,MAAd,2BACA,cAAC,KAAaC,OAAd,CAAqBC,gBAAc,eACnC,cAAC,KAAaC,SAAd,CAAuB5Q,GAAG,aAA1B,SACE,eAAC6Q,GAAA,EAAD,CAAK9N,UAAU,oBAAf,UACE,cAAC,KAAa+N,KAAd,UACE,cAAC,IAAD,CAAMlC,GAAG,IAAT,yBAEF,cAAC,KAAakC,KAAd,UACE,cAAC,IAAD,CAAMlC,GAAG,SAAT,oBAEF,cAAC,KAAakC,KAAd,UACE,cAAC,IAAD,CAAMlC,GAAG,gBAAT,2BAEF,cAAC,KAAakC,KAAd,UACE,mBAAGb,KAAK,4CAAR,sBAEF,cAAC,KAAaa,KAAd,UACE,oBACEb,KAAK,IACLxM,QAAS,SAACf,GACRA,EAAEC,iBACF6B,aAAauM,WAAW,aACxB9K,OAAO+K,SAASC,UALpB,4BAQW7M,QARX,IAQWA,OARX,EAQWA,EAAMA,KAAK/E,SARtB,kBCAG6R,OAlBf,WACE,OACE,cAAC,EAAD,UACE,qBAAKnO,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoO,OAAK,EAACC,KAAK,IAAIC,UAAWlC,KACjC,cAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAWtG,IACnC,cAAC,IAAD,CAAOqG,KAAK,SAASC,UAAWnB,KAChC,cAAC,IAAD,CAAOkB,KAAK,gBAAgBC,UAAWvB,gBCdnDwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8d602592.chunk.js","sourcesContent":["type LoginRejectMessage =\r\n  | 'wrong_credentials'\r\n  | 'expired_token'\r\n  | 'missing_auth'\r\n  | 'server_failure';\r\ntype SignupRejectMessage = 'server_failure' | 'username_taken' | 'invalid_json';\r\n\r\n/**\r\n * Errore lanciato se non c'è un token di autenticazione in localStorage\r\n */\r\nexport class NoTokenError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\n/**\r\n * Errore lanciato se il server rigetta la richiesta a causa di session-token\r\n * mancante in headers/authorization\r\n */\r\nexport class NoAuthTokenOnRequest extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\n/**\r\n * Errore lanciato se il server rifiuta il token o le credenziali\r\n */\r\nexport class AuthServerRejection extends Error {\r\n  constructor(message: LoginRejectMessage) {\r\n    super(message);\r\n  }\r\n}\r\n\r\n/**\r\n * Errore lanciato quando il server rifiuta i dati mandati.\r\n */\r\nexport class AuthSignupRejection extends Error {\r\n  constructor(message: SignupRejectMessage) {\r\n    super(message);\r\n  }\r\n}\r\n\r\n/**\r\n * Errore lanciato quando il server restituisce un errore\r\n * inaspettato. Da usare come ultima spiaggia.\r\n */\r\nexport class GenericServerError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","import React from 'react';\r\nconst reactIsDev = require('react-is-dev');\r\nconst isDev: boolean = reactIsDev(React);\r\n\r\nexport default isDev;\r\n","import { Call, CallApplication, User } from './Types';\r\nimport * as faker from 'faker';\r\n\r\ninterface MockData {\r\n  currentUser: User;\r\n  callBuilder: (len: number) => Call[];\r\n  applicationBuilder: (len: number) => CallApplication[];\r\n  // otherUsers: User[];\r\n}\r\n\r\nconst sampleUser: User = {\r\n  username: 'Aron',\r\n  token: 'aabbcc',\r\n  uid: 66,\r\n  clientId: 'exampleclientId',\r\n  favorites: [],\r\n  accountType: 'external',\r\n};\r\n\r\nconst callBuilder = (len: number): Call[] => {\r\n  const ret: Call[] = [];\r\n  for (let i = 0; i < len; i++) {\r\n    ret.push({\r\n      id: i,\r\n      // poster: 2,\r\n      poster: sampleUser.uid,\r\n      title: faker.name.jobTitle(),\r\n      description: faker.lorem.paragraphs(3),\r\n      clientId: faker.company.companyName(),\r\n      type: faker.random.arrayElement(['internal', 'external']),\r\n      timePosted: faker.date.recent(),\r\n      applications: [\r\n        {\r\n          id: faker.random.number(),\r\n          applicantId: faker.random.number(),\r\n          applicantName: faker.name.firstName(),\r\n          applicantSeniority: faker.random.arrayElement(['Junior', 'Senior']),\r\n          timeApplied: faker.date.recent(),\r\n          applicationStatus: 'rifiutato',\r\n          applicantType: faker.random.arrayElement(['internal', 'external']),\r\n        },\r\n        {\r\n          id: faker.random.number(),\r\n          applicantId: faker.random.number(),\r\n          applicantName: faker.name.firstName(),\r\n          applicantSeniority: faker.random.arrayElement(['Junior', 'Senior']),\r\n          timeApplied: faker.date.recent(),\r\n          applicationStatus: 'ricevuto',\r\n          applicantType: faker.random.arrayElement(['internal', 'external']),\r\n        },\r\n        {\r\n          id: faker.random.number(),\r\n          applicantId: faker.random.number(),\r\n          applicantName: faker.name.firstName(),\r\n          applicantSeniority: faker.random.arrayElement(['Junior', 'Senior']),\r\n          timeApplied: faker.date.recent(),\r\n          applicationStatus: 'review',\r\n          applicantType: faker.random.arrayElement(['internal', 'external']),\r\n        },\r\n        {\r\n          id: faker.random.number(),\r\n          applicantId: faker.random.number(),\r\n          applicantName: faker.name.firstName(),\r\n          applicantSeniority: faker.random.arrayElement(['Junior', 'Senior']),\r\n          timeApplied: faker.date.recent(),\r\n          applicationStatus: 'confermato',\r\n          applicantType: faker.random.arrayElement(['internal', 'external']),\r\n        },\r\n        {\r\n          id: faker.random.number(),\r\n          applicantId: faker.random.number(),\r\n          applicantName: faker.name.firstName(),\r\n          applicantSeniority: faker.random.arrayElement(['Junior', 'Senior']),\r\n          timeApplied: faker.date.recent(),\r\n          applicationStatus: 'ricevuto',\r\n          applicantType: faker.random.arrayElement(['internal', 'external']),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n  return ret;\r\n};\r\n\r\nconst applicationBuilder = (len: number): CallApplication[] => {\r\n  const ret: CallApplication[] = [];\r\n  for (let i = 0; i < len; i++) {\r\n    ret.push({\r\n      applicantId: faker.random.number(),\r\n      applicantName: faker.name.firstName(),\r\n      applicationStatus: faker.random.arrayElement([\r\n        'ricevuto',\r\n        'confermato',\r\n        'rifiutato',\r\n        'review',\r\n      ]),\r\n      id: faker.random.number(),\r\n      timeApplied: faker.date.recent(),\r\n      applicantSeniority: faker.random.arrayElement(['junior', 'senior']),\r\n      target: callBuilder(1)[0],\r\n    });\r\n  }\r\n  return ret;\r\n};\r\n\r\nconst mockData: MockData = {\r\n  currentUser: sampleUser,\r\n  callBuilder: callBuilder,\r\n  applicationBuilder: applicationBuilder,\r\n};\r\n\r\nexport default mockData;\r\n","import {\r\n  AuthServerRejection,\r\n  AuthSignupRejection,\r\n  GenericServerError,\r\n  NoAuthTokenOnRequest,\r\n  NoTokenError,\r\n} from './Errors';\r\nimport isDev from './IsDev';\r\nimport mockData from './MockData';\r\nimport { RegisterCredentials, User, UsernameAndPassword } from './Types';\r\n\r\n/**\r\n * Prende il token da localStorage e autentica l'utente. Se questo fallisce,\r\n * ritorna o NoTokenError o AuthServerRejection\r\n * @returns {Promise<User>} The promisified authenticated user object\r\n */\r\nexport const authenticateWithToken = (): Promise<User> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (isDev) {\r\n      const doResolve = true;\r\n      doResolve\r\n        ? resolve(mockData.currentUser)\r\n        : reject(new NoTokenError('no_token'));\r\n      return;\r\n    }\r\n    const token = localStorage.getItem('authToken');\r\n    if (!token) {\r\n      reject(new NoTokenError('no_token'));\r\n      return;\r\n    } else {\r\n      const fetchParams: RequestInit = {\r\n        method: 'POST',\r\n        headers: [['authorization', token]],\r\n      };\r\n      const response = await fetch('/api/authenticateWithToken', fetchParams);\r\n      if (!response.ok) {\r\n        handleServerRejections(await response.text(), reject);\r\n      } else {\r\n        resolve(await response.json());\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Manda una richiesta al server per autenticare l'utente\r\n * @param credentials username e password\r\n * @returns il token di sessione\r\n */\r\nexport const authenticateWithUsernameAndPassword = (\r\n  credentials: UsernameAndPassword\r\n): Promise<string> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (isDev) {\r\n      reject(new AuthServerRejection('wrong_credentials'));\r\n      return;\r\n    }\r\n    const fetchParams: RequestInit = {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    };\r\n    const response = await fetch(\r\n      '/api/authenticateWithUsernameAndPassword',\r\n      fetchParams\r\n    );\r\n    if (!response.ok) {\r\n      handleServerRejections(await response.text(), reject);\r\n    } else {\r\n      resolve(await response.text());\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @param credentials Username, password, accountType, clientId?\r\n * @returns {User} the authenticated user\r\n */\r\nexport const registerWithUsernameAndPassword = (\r\n  credentials: RegisterCredentials\r\n): Promise<User> => {\r\n  return new Promise((resolve, reject) => {\r\n    if (isDev) {\r\n      reject(new AuthSignupRejection('username_taken'));\r\n      return;\r\n    }\r\n    const fetchParams: RequestInit = {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    };\r\n    fetch('/api/registerUser', fetchParams).then(async (response) => {\r\n      if (!response.ok) {\r\n        const err = await response.text();\r\n        handleServerRejections(err, reject);\r\n      } else {\r\n        resolve(await response.json());\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param err Il messaggio di errore ritornato dal server\r\n * @param reject Il metodo della Promise ritornata dal parente\r\n *                per rifiutare con l'errore giusto\r\n */\r\nexport const handleServerRejections = (err: string, reject: Function) => {\r\n  console.log(err);\r\n  switch (err) {\r\n    case 'invalid_json':\r\n      reject(new AuthSignupRejection(err));\r\n      break;\r\n    case 'existing_username':\r\n      reject(new AuthSignupRejection('username_taken'));\r\n      break;\r\n    case 'server_failure':\r\n      reject(new GenericServerError(err));\r\n      break;\r\n    case 'no_token':\r\n      reject(new NoAuthTokenOnRequest(err));\r\n      break;\r\n    case 'wrong_credentials':\r\n      reject(new AuthServerRejection(err));\r\n      break;\r\n    case 'token_expired':\r\n      reject(new NoAuthTokenOnRequest(err));\r\n      break;\r\n    case 'must_be_post':\r\n      throw new GenericServerError(\r\n        `This should never emerge in prod. \r\n        There is a GET request that should be POST.`\r\n      );\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  AccountType,\r\n  RegisterCredentials,\r\n  UsernameAndPassword,\r\n} from '../../utils/Types';\r\nimport './auth.scss';\r\n\r\ninterface Props {\r\n  setUsernameAndPassword: (credentials: UsernameAndPassword) => void;\r\n  registerWithUsernameAndPassword: (credentials: RegisterCredentials) => void;\r\n  errorMessage: string;\r\n  nullError: () => void;\r\n}\r\n\r\nfunction toAccountType(str: string): AccountType {\r\n  if (str === 'internal') return 'internal';\r\n  if (str === 'external') return 'external';\r\n  else return 'internal';\r\n}\r\n\r\n/**\r\n * UI per permettere all'utente di inserire username e password.\r\n * @param {Props} props Metodo per impostare in Auth username e password.\r\n * @return {JSX.Element}\r\n */\r\nfunction AuthUI(props: Props) {\r\n  const [section, setSection] = useState('signin');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [type, setType] = useState<AccountType>('internal');\r\n  const [clientId, setClientId] = useState<string | undefined>();\r\n  const handleLoginSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    props.setUsernameAndPassword({ username, password });\r\n  };\r\n\r\n  /**\r\n   * Inizia procedura di registrazione. Tutta la logica è in <Auth>\r\n   */\r\n  const handleSignupSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    props.registerWithUsernameAndPassword({\r\n      username,\r\n      password,\r\n      type,\r\n      clientId,\r\n    });\r\n  };\r\n  let body;\r\n  if (section === 'signin') {\r\n    // modifica l'ui da mostrare a seconda se la sezione è 'signin' o 'signup'\r\n    body = (\r\n      <div className=\"main\">\r\n        <h1 className=\"text-center\">Accedi</h1>\r\n        {props.errorMessage && (\r\n          <div className=\"alert alert-danger\">{props.errorMessage}</div>\r\n        )}\r\n        <form\r\n          onSubmit={\r\n            section === 'signin' ? handleLoginSubmit : handleSignupSubmit\r\n          }\r\n          className=\"form-group\"\r\n        >\r\n          <label htmlFor=\"username\">\r\n            <span>Username:</span>\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              type=\"text\"\r\n              id=\"username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"password\">\r\n            <span>Password:</span>\r\n            <input\r\n              className=\"form-control\"\r\n              required\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n\r\n          <div className=\"submit text-center\">\r\n            <input\r\n              required\r\n              className=\"btn btn-primary mt-3\"\r\n              type=\"submit\"\r\n              value=\"Log In\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    body = (\r\n      <div className=\"main\">\r\n        <h1 className=\"text-center\">Crea account</h1>\r\n        {props.errorMessage && (\r\n          <div className=\"alert alert-danger form-group\">\r\n            {props.errorMessage}\r\n          </div>\r\n        )}\r\n        <form\r\n          onSubmit={\r\n            section === 'signin' ? handleLoginSubmit : handleSignupSubmit\r\n          }\r\n        >\r\n          <label htmlFor=\"username\">\r\n            <span>Username:</span>\r\n            <input\r\n              minLength={1}\r\n              required\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"INSICURO\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"password\">\r\n            <span>Password:</span>\r\n            <input\r\n              minLength={1}\r\n              required\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"INSICURO\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"accountType\">\r\n            <span>Tipo di account:</span>\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"accountType\"\r\n              value={type}\r\n              onChange={(e) => {\r\n                setType(toAccountType(e.target.value));\r\n              }}\r\n            >\r\n              <option value=\"internal\">internal</option>\r\n              <option value=\"external\">external</option>\r\n            </select>\r\n          </label>\r\n          {type === 'external' && (\r\n            <label htmlFor=\"clientId\">\r\n              <span>Id Cliente:</span>\r\n              <input\r\n                placeholder=\"(nome azienda)\"\r\n                className=\"form-control\"\r\n                required\r\n                value={clientId}\r\n                type=\"text\"\r\n                id=\"clientId\"\r\n                onChange={(e) => setClientId(e.target.value)}\r\n              />\r\n            </label>\r\n          )}\r\n          <div className=\"submit text-center\">\r\n            <input\r\n              required\r\n              className=\"btn btn-primary mt-3\"\r\n              type=\"submit\"\r\n              value=\"Sign Up\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"auth-box\">\r\n        <div className=\"auth-nav\">\r\n          <div\r\n            className={`text-center auth-nav-item ${\r\n              section === 'signin' && 'active'\r\n            }`}\r\n            onClick={() => {\r\n              props.nullError();\r\n              setSection('signin');\r\n            }}\r\n          >\r\n            Sign In\r\n          </div>\r\n          <div\r\n            className={`text-center auth-nav-item ${\r\n              section === 'signup' && 'active'\r\n            }`}\r\n            onClick={() => {\r\n              props.nullError();\r\n              setSection('signup');\r\n            }}\r\n          >\r\n            Sign Up\r\n          </div>\r\n        </div>\r\n        {body}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthUI;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './spinner.scss';\r\n/**\r\n * Componente usato in tutta l'applicazione per mostrare che\r\n * il contenuto richiesto è in fase di caricamento\r\n */\r\nfunction Spinner(props: any) {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader type=\"Circles\" color=\"blue\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport {\r\n  UsernameAndPassword,\r\n  User,\r\n  UserProvider,\r\n  FavoritesOperations,\r\n  RegisterCredentials,\r\n} from '../../utils/Types';\r\nimport {\r\n  authenticateWithToken,\r\n  authenticateWithUsernameAndPassword,\r\n  registerWithUsernameAndPassword,\r\n} from '../../utils/Authenticators';\r\nimport AuthUI from './AuthUI';\r\nimport {\r\n  AuthServerRejection,\r\n  AuthSignupRejection,\r\n  NoAuthTokenOnRequest,\r\n  NoTokenError,\r\n} from '../../utils/Errors';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\n\r\nexport const UserContext = React.createContext<UserProvider | null>(null);\r\n\r\nexport interface AuthProps {}\r\n\r\nexport interface AuthState {\r\n  isAuthenticated: boolean;\r\n  usernameAndPassword?: UsernameAndPassword;\r\n  user: User | null;\r\n  errorMessage: string;\r\n  loading: boolean;\r\n}\r\n\r\n/**\r\n * Fornisce il wrapper d'autenticazione per l'applicazione.\r\n * Se l'utente è autenticato, ritorna i figli, altrimenti l'interfaccia auth.\r\n * Ai figli viene dato un oggetto utente tramite React.Context.\r\n */\r\nclass Auth extends React.Component<AuthProps, AuthState> {\r\n  constructor(props: AuthProps) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      errorMessage: '',\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  nullError = () => {\r\n    this.setState({ errorMessage: '' });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Prova ad autenticare appena il componente si carica, nel caso ci sia\r\n    // già un token in localStorage\r\n    this.authenticate();\r\n  }\r\n\r\n  /**\r\n   * Il componente richiede l'autenticazione quando riceve username e password\r\n   */\r\n  componentDidUpdate(\r\n    prevProps: Readonly<AuthProps>,\r\n    prevState: Readonly<AuthState>\r\n  ) {\r\n    if (\r\n      prevState.usernameAndPassword?.username !==\r\n        this.state.usernameAndPassword?.username ||\r\n      this.state.usernameAndPassword?.password !==\r\n        prevState.usernameAndPassword?.password\r\n    ) {\r\n      this.authenticate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Metodo per ricevere user e password da AuthUI\r\n   * @param {UsernameAndPassword} credentials oggetto con username e password\r\n   */\r\n  setUsernameAndPassword = (credentials: UsernameAndPassword) => {\r\n    this.setState({ usernameAndPassword: credentials });\r\n  };\r\n\r\n  /**\r\n   * Punto finale della procedura di autenticazione.\r\n   * Prende l'utente autenticato dal server e lo mette in Context.\r\n   * @param user L'utente autenticato mandato dal server.\r\n   */\r\n  handleAuthSuccess = (user: User) => {\r\n    this.setState({ loading: false });\r\n    console.log('auth success');\r\n    console.log(user);\r\n    this.setState({ isAuthenticated: true, user: user });\r\n  };\r\n\r\n  /**\r\n   * Punto intermedio di autenticazione.\r\n   * Il server ha accettato username e password, e ha mandato il token.\r\n   * Questa funzioe mette il token in localStorage e reinizia\r\n   * la procedura di autenticazione.\r\n   * @param token Token di sessione ricevuto dal server.\r\n   */\r\n  handleTokenReceived = (token: string) => {\r\n    localStorage.setItem('authToken', token);\r\n    this.authenticate();\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Gestione degli errori di autenticazione.\r\n   *\r\n   */\r\n  handleAuthFailure = (e: any) => {\r\n    this.setState({ loading: false });\r\n    if (e instanceof NoTokenError && this.state.usernameAndPassword) {\r\n      authenticateWithUsernameAndPassword(this.state.usernameAndPassword)\r\n        .then(this.handleTokenReceived)\r\n        .catch(this.handleAuthFailure);\r\n    } else if (e instanceof NoTokenError && !this.state.usernameAndPassword) {\r\n      console.log(\r\n        'No token was found and user has not provided credentials yet.'\r\n      );\r\n      return;\r\n    } else if (\r\n      e instanceof AuthServerRejection &&\r\n      e.message === 'token_expired'\r\n    ) {\r\n      return;\r\n    } else if (\r\n      e instanceof AuthServerRejection &&\r\n      e.message === 'server_failure'\r\n    ) {\r\n      this.setState({\r\n        errorMessage: 'Errore nel server. Riprovare più tardi.',\r\n      });\r\n      return;\r\n    } else if (\r\n      e instanceof AuthServerRejection &&\r\n      e.message === 'wrong_credentials'\r\n    ) {\r\n      this.setState({\r\n        usernameAndPassword: undefined,\r\n        errorMessage: 'Credenziali rifiutate',\r\n      });\r\n      return;\r\n    } else if (e instanceof NoAuthTokenOnRequest) {\r\n      this.setState({ usernameAndPassword: undefined, errorMessage: '' });\r\n    } else {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Punto di arrivo della procedura di registrazione.\r\n   * Accetta l'utente autenticato ritornato dal server e\r\n   * lo mette in Context.\r\n   * @param user L'oggetto-utente ritornato dal server\r\n   */\r\n  handleSignupSuccess = (user: User) => {\r\n    this.setState({ loading: false });\r\n    user.token && localStorage.setItem('authToken', user.token);\r\n    this.setState({ user: user, isAuthenticated: true });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Gestione degli errori di registrazione.\r\n   */\r\n  handleSignupFailure = (e: any) => {\r\n    this.setState({ loading: false });\r\n    if (e instanceof AuthSignupRejection && e.message === 'username_taken') {\r\n      this.setState({ errorMessage: 'Questo username esiste già.' });\r\n      return;\r\n    } else if (\r\n      e instanceof AuthSignupRejection &&\r\n      e.message === 'invalid_json'\r\n    ) {\r\n      this.setState({\r\n        errorMessage: 'Errore. Controlla di aver inserito tutto correttamente',\r\n      });\r\n      return;\r\n    } else if (\r\n      e instanceof AuthSignupRejection &&\r\n      e.message === 'server_failure'\r\n    ) {\r\n      this.setState({ errorMessage: 'Errore nel server. Riprova più tardi.' });\r\n      return;\r\n    } else {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Punto d'entrata per il flow di autenticazione.\r\n   */\r\n  authenticate = () => {\r\n    this.setState({ loading: true });\r\n    authenticateWithToken()\r\n      .then(this.handleAuthSuccess)\r\n      .catch(this.handleAuthFailure);\r\n  };\r\n\r\n  /**\r\n   * Metodo chiamato per creare un nuovo account utente con username e password\r\n   */\r\n  register = (credentials: RegisterCredentials) => {\r\n    const confirm = window.confirm(\r\n      `\r\n      Non usare username o password che utilizzi altrove! \r\n      Non sono tenuti in maniera sicura nel database!\r\n      `\r\n    );\r\n    if (!confirm) return;\r\n    this.setState({ loading: true });\r\n    registerWithUsernameAndPassword(credentials)\r\n      .then(this.handleSignupSuccess)\r\n      .catch(this.handleSignupFailure);\r\n  };\r\n\r\n  /**\r\n   * Rimuove o aggiunge una Call dai preferiti dell'utente sul server\r\n   * e sul Client.\r\n   * @param operation L'operazione da eseguire\r\n   * @param callId L'id del preferito da aggiungere/togliere\r\n   */\r\n  alterUserFavorites = (\r\n    operation: FavoritesOperations,\r\n    callId: number\r\n  ): void => {\r\n    const user = this.state.user;\r\n    if (user) {\r\n      // Aggiornamento locale\r\n      operation === 'add'\r\n        ? user?.favorites?.push(callId)\r\n        : (user.favorites = user?.favorites?.filter((id) => id != callId));\r\n      this.setState({ user: user });\r\n\r\n      // Aggiornamento remoto\r\n      const token = this.state.user?.token ? this.state.user.token : '';\r\n      const fetchParams: RequestInit = {\r\n        method: 'POST',\r\n        body: JSON.stringify({ id: callId, operation: operation }),\r\n        headers: [['authorization', token]],\r\n      };\r\n      fetch('/api/updateUserFavorites', fetchParams).then(async (response) => {\r\n        if (!response.ok) {\r\n          alert(\r\n            'could not update server favorites: ' + (await response.text())\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Aggiunge all'oggetto-utente locale la candidatura ad un post.\r\n   * L'aggiornamento sul server è eseguito direttamente\r\n   * in CallDetails/UserIsNotOwner.\r\n   * @param callId Id della Call target di candidatura\r\n   */\r\n  addUserApplicationLocally = (callId: number) => {\r\n    const user = this.state.user;\r\n    user?.applications?.push(callId);\r\n    this.setState({ user: user });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spinner />;\r\n    }\r\n    if (!this.state.isAuthenticated || !this.state.user) {\r\n      return (\r\n        <AuthUI\r\n          nullError={this.nullError}\r\n          errorMessage={this.state.errorMessage}\r\n          registerWithUsernameAndPassword={this.register}\r\n          setUsernameAndPassword={this.setUsernameAndPassword}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <UserContext.Provider\r\n          value={{\r\n            user: this.state.user,\r\n            editFavorites: this.alterUserFavorites,\r\n            editApplications: this.addUserApplicationLocally,\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </UserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import isDev from './IsDev';\r\nimport MockData from './MockData';\r\nimport {\r\n  ApplicationStatus,\r\n  Call,\r\n  CallApplication,\r\n  CallEssential,\r\n  User,\r\n} from './Types';\r\nimport { handleServerRejections } from './Authenticators';\r\n\r\n/**\r\n * Ritorna la lista completa di Call presenti nel database\r\n */\r\nexport const getCalls = (): Promise<Call[]> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (isDev) {\r\n      const mock = MockData.callBuilder(10);\r\n      resolve(mock);\r\n      return;\r\n    }\r\n    const ls = localStorage.getItem('authToken');\r\n    const token = ls ? ls : '';\r\n    const fetchParams: RequestInit = {\r\n      method: 'GET',\r\n      headers: [\r\n        ['authorization', token],\r\n        ['Content-Type', 'application/json'],\r\n      ],\r\n    };\r\n    const response = await fetch('/api/getJobCalls', fetchParams);\r\n    if (!response.ok) {\r\n      handleServerRejections(await response.text(), reject);\r\n    } else {\r\n      const data: Call[] = await response.json();\r\n      resolve(\r\n        data.map((i) => {\r\n          i.timePosted = new Date(i.timePosted);\r\n          return i;\r\n        })\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Crea una nuova call sul server\r\n * @param user utente autenticato per il token\r\n * @param call dati della Call da creare\r\n */\r\nexport const createCall = async (\r\n  user: User,\r\n  call: CallEssential\r\n): Promise<boolean> => {\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'POST',\r\n    body: JSON.stringify(call),\r\n    headers: [['authorization', token]],\r\n  };\r\n  const response = await fetch('/api/createJobCall', fetchParams);\r\n  if (!response.ok) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Scarica i dettagli relativi a una call specifica.\r\n * I dati variano a seconda se l'utente è il proprietario\r\n * della call.\r\n * @param user utente autenticato per il token\r\n * @param id id della call da scaricare\r\n * @returns\r\n */\r\nexport const getCall = async (user: User, id: string): Promise<Call | null> => {\r\n  if (isDev) {\r\n    return MockData.callBuilder(2)[0];\r\n  }\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'GET',\r\n    headers: [['authorization', token]],\r\n  };\r\n  const url = '/api/getJobCallDetails/' + id;\r\n  const response = await fetch(url, fetchParams);\r\n  if (response.ok) {\r\n    const data: Call = await response.json();\r\n    data.timePosted = new Date(data.timePosted);\r\n    if (data.applications) {\r\n      console.log(data.applications);\r\n      // Convert iso-strings to Date if applications are present\r\n      // on the object\r\n      data.applications = data.applications.map((i) => ({\r\n        ...i,\r\n        timeApplied: new Date(i.timeApplied),\r\n      }));\r\n    }\r\n    return data;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Aggiorna lo stato di una candidatura sul server\r\n * @param newStatus Nuovo stato da assegnare alla candidatura\r\n * @param applicationId id della candidatura\r\n * @param user utente autenticato per il token\r\n * @return {boolean} true se eseguito con successo\r\n */\r\nexport const updateApplicationStatus = async (\r\n  newStatus: ApplicationStatus,\r\n  applicationId: number,\r\n  user: User\r\n): Promise<boolean> => {\r\n  if (isDev) return true;\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'POST',\r\n    headers: [['authorization', token]],\r\n    body: JSON.stringify({ applicationId, newStatus }),\r\n  };\r\n  const response = await fetch('/api/updateApplicationStatus', fetchParams);\r\n  if (!response.ok) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param user utente autenticato\r\n * @param callId id della call cui candidarsi\r\n * @param seniority grado di seniority dichiarato\r\n * @returns true se eseguito con successo\r\n */\r\nexport const applyToCall = async (\r\n  user: User,\r\n  callId: number,\r\n  seniority: string\r\n): Promise<boolean> => {\r\n  if (isDev) {\r\n    return true;\r\n  }\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'POST',\r\n    headers: [['authorization', token]],\r\n    body: JSON.stringify({ callId, seniority }),\r\n  };\r\n  const response = await fetch('/api/createJobApplication', fetchParams);\r\n  if (!response.ok) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param user utente autenticato\r\n * @returns la lista delle Call create dall'utente\r\n */\r\nexport const getUserPosts = async (user: User): Promise<Call[]> => {\r\n  if (isDev) {\r\n    return MockData.callBuilder(10);\r\n  }\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'GET',\r\n    headers: [['authorization', token]],\r\n  };\r\n  const response = await fetch('/api/getUserPosts', fetchParams);\r\n  if (!response.ok) {\r\n    console.log(await response.text());\r\n    throw new Error('failure');\r\n  } else {\r\n    let data: Call[] = await response.json();\r\n    data = data.map((post) => ({\r\n      ...post,\r\n      timePosted: new Date(post.timePosted),\r\n    }));\r\n    console.log(data);\r\n    return data;\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param user utente autenticato\r\n * @returns La lista di candidature effettuate dall'utente\r\n */\r\nexport const getUserApplications = async (\r\n  user: User\r\n): Promise<CallApplication[]> => {\r\n  if (isDev) {\r\n    return MockData.applicationBuilder(10);\r\n  }\r\n  const token = user.token ? user.token : '';\r\n  const fetchParams: RequestInit = {\r\n    method: 'GET',\r\n    headers: [['authorization', token]],\r\n  };\r\n  const response = await fetch('/api/getUserApplications', fetchParams);\r\n  if (!response.ok) {\r\n    throw new Error('failure');\r\n  } else {\r\n    let data: CallApplication[] = await response.json();\r\n    data = data.map((post) => ({\r\n      ...post,\r\n      timeApplied: new Date(post.timeApplied),\r\n    }));\r\n    console.log(data);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const editCall = async (\r\n  call: Call,\r\n  user: User,\r\n  newTitle: string,\r\n  newDescription: string\r\n) => {\r\n  if (isDev) {\r\n    return true;\r\n  }\r\n  if (user && user.token) {\r\n    const fetchParams: RequestInit = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        callId: call.id,\r\n        newTitle: newTitle,\r\n        newDescription: newDescription,\r\n      }),\r\n      headers: [['authorization', user.token]],\r\n    };\r\n    const response = await fetch('/api/editCall', fetchParams);\r\n    if (!response.ok) {\r\n      return false;\r\n    } else return true;\r\n  } else return false;\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport isDev from '../../utils/IsDev';\r\nimport {\r\n  applyToCall,\r\n  editCall,\r\n  updateApplicationStatus,\r\n} from '../../utils/JobCallApi';\r\nimport { ApplicationStatus, Call, User } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\nimport * as faker from 'faker';\r\n\r\ninterface Props {\r\n  user: User;\r\n  call: Call;\r\n  refresh: () => void;\r\n}\r\n\r\ninterface InfoProps extends Props {\r\n  owner: boolean;\r\n}\r\n\r\nfunction CallInformation(props: InfoProps) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [title, setTitle] = useState(props.call.title);\r\n  const [description, setDescritpion] = useState(props.call.description);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const user = useContext(UserContext);\r\n  const clientId =\r\n    props.call.clientId && props.call.clientId !== 'NOID'\r\n      ? props.call.clientId\r\n      : '';\r\n\r\n  const handleChangeSubmit = async () => {\r\n    if (user) {\r\n      const success = await editCall(props.call, user.user, title, description);\r\n      if (!success) {\r\n        setError('Non è stato possibile aggiornare la call');\r\n      } else {\r\n        setSuccess('Call aggiornata con successo');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        {success && <div className=\"alert alert-success\">{success}</div>}\r\n        <h1 className=\"display-5\">\r\n          {editing ? (\r\n            <div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            title\r\n          )}\r\n          {props.owner && !editing && (\r\n            <button\r\n              className=\"btn btn-secondary d-block mt-2 mb-2\"\r\n              onClick={() => {\r\n                setEditing(true);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n        </h1>\r\n        <p className=\"\">\r\n          {props.call.timePosted.toLocaleDateString()}\r\n          {' - ' + clientId}\r\n        </p>\r\n        <hr className=\"my-4\" />\r\n        {editing ? (\r\n          <div>\r\n            <textarea\r\n              rows={10}\r\n              className=\"form-control\"\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescritpion(e.target.value);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n        ) : (\r\n          description.split('\\n').map((par) => (\r\n            <p key={par} className=\"lead\">\r\n              {par}\r\n            </p>\r\n          ))\r\n        )}\r\n        {props.owner && editing && (\r\n          <div className=\"buttons pt-3\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                handleChangeSubmit();\r\n                setEditing(false);\r\n              }}\r\n            >\r\n              Conferma\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary ml-2\"\r\n              onClick={() => {\r\n                setEditing(false);\r\n                setTitle(props.call.title);\r\n                setDescritpion(props.call.description);\r\n              }}\r\n            >\r\n              Annulla\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n/**\r\n *\r\n * UI da ritornare se l'utente è il poster della Call.\r\n */\r\nexport function UserIsOwner(props: Props) {\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [applicants, setApplicants] = useState(props.call.applications);\r\n  const [query, setQuery] = useState('');\r\n  const [queryType, setQueryType] = useState('Nome');\r\n\r\n  useEffect(() => {\r\n    if (queryType === 'Nome') {\r\n      const filteredApplicants = props.call.applications?.filter(\r\n        (application) => application.applicantName.includes(query)\r\n      );\r\n      setApplicants(filteredApplicants);\r\n    } else if (queryType == 'Seniority') {\r\n      const filteredApplicants = props.call.applications?.filter(\r\n        (application) => application.applicantSeniority === query\r\n      );\r\n      setApplicants(filteredApplicants);\r\n    }\r\n  }, [query, queryType]);\r\n  const setApplicationStatus = (\r\n    newStatus: ApplicationStatus,\r\n    applicationId: number\r\n  ) => {\r\n    if (isDev) return;\r\n    setLoading(true);\r\n    updateApplicationStatus(newStatus, applicationId, props.user).then(\r\n      (success) => {\r\n        if (success) {\r\n          props.refresh();\r\n        } else {\r\n          setError('Non è stato possibile aggiornare lo stato');\r\n        }\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  if (applicants) {\r\n    return (\r\n      <div className=\"call-view user-owner text-left p-3\">\r\n        <CallInformation {...props} owner={true} />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        <h2 className=\"p-2\">Candidati</h2>\r\n        <p className=\"text-muted p-2\">\r\n          C&apos;è una funzionalità nel Brief che qui non è implemenata, ovvero\r\n          l&apos;aggiunta diretta di un candidato. Per ovviare al problema, si\r\n          dovrebbe aggiornare l&apos;endpoint sul server per accettare anche uno\r\n          username per creare una candidatura. Tuttavia, la nuova categoria di\r\n          errori che emerge quando non è l&apos;utente autenticato (che quindi\r\n          dispone di un ID certamente esistente nel DB) a creare una candidatura\r\n          (per esempio viene fornito un username non esistente) richiederebbe\r\n          una implementazione attenta della nuova feature. Purtroppo non ho\r\n          pianificato con sufficiente accortezza all&apos;inzio, quindi tornare\r\n          a lavorare su questo richiederebbe troppo tempo.\r\n        </p>\r\n        {queryType === 'Nome' && (\r\n          <div className=\"form-group p-2\">\r\n            <label htmlFor=\"\">\r\n              <input\r\n                placeholder=\"Inserisci il nome\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={query}\r\n                onChange={(e) => {\r\n                  setQuery(e.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n        <div className=\"form-group p-2\">\r\n          <label htmlFor=\"\">\r\n            <select\r\n              className=\"form-control\"\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                value === 'Senior' || value === 'Junior'\r\n                  ? setQueryType('Seniority')\r\n                  : setQueryType('Nome');\r\n                if (value !== 'Nome') setQuery(value);\r\n                else setQuery('');\r\n              }}\r\n            >\r\n              <option value=\"Nome\">Filtra per Nome</option>\r\n              <option value=\"Senior\">Solo senior</option>\r\n              <option value=\"Junior\">Solo junior</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <table className=\"table table-striped table-responsive-sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Seniority</th>\r\n              <th>Data</th>\r\n              <th>Residenza</th>\r\n              <th>Status</th>\r\n              <th>Azioni</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {applicants\r\n              .filter(\r\n                (application) => application.applicationStatus !== 'rifiutato'\r\n              )\r\n              .map((application) => (\r\n                <tr\r\n                  key={application.id}\r\n                  style={{\r\n                    backgroundColor:\r\n                      application.applicantType === 'internal'\r\n                        ? 'rgba(0, 135, 255, 0.7)'\r\n                        : 'rgba(255, 197, 0, 1)',\r\n                  }}\r\n                >\r\n                  <td>{application.applicantName}</td>\r\n                  <td>\r\n                    {faker.name.jobTitle()} ({application.applicantSeniority})\r\n                  </td>\r\n                  <td>{application.timeApplied.toLocaleDateString()}</td>\r\n                  <td>{faker.address.city()}</td>\r\n                  <td\r\n                    style={{\r\n                      fontWeight: 'bold',\r\n                    }}\r\n                  >\r\n                    {application.applicationStatus}\r\n                  </td>\r\n                  <td className=\"actions-tooltip\">\r\n                    <span\r\n                      onClick={() =>\r\n                        setApplicationStatus('ricevuto', application.id)\r\n                      }\r\n                    >\r\n                      Ricevuto\r\n                    </span>\r\n                    <span\r\n                      onClick={() =>\r\n                        setApplicationStatus('review', application.id)\r\n                      }\r\n                    >\r\n                      Review\r\n                    </span>\r\n                    <span\r\n                      onClick={() =>\r\n                        setApplicationStatus('confermato', application.id)\r\n                      }\r\n                    >\r\n                      Confermato\r\n                    </span>\r\n                    <span\r\n                      onClick={() =>\r\n                        setApplicationStatus('rifiutato', application.id)\r\n                      }\r\n                    >\r\n                      Rifiutato\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else return <h1>No applications</h1>;\r\n}\r\n\r\n/**\r\n *\r\n * UI da ritornare se l'utente non è il poster della Call.\r\n */\r\nexport function UserIsNotOwner(props: Props) {\r\n  const hasApplied = props.user.applications?.includes(props.call.id);\r\n  const [error, setError] = useState('');\r\n  const [seniority, setSeniority] = useState('junior');\r\n  const [loading, setLoading] = useState(false);\r\n  const ctx = useContext(UserContext);\r\n\r\n  const handlesubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const success = await applyToCall(props.user, props.call.id, seniority);\r\n    if (success) {\r\n      ctx?.editApplications(props.call.id);\r\n      setLoading(false);\r\n      props.refresh();\r\n    } else {\r\n      setError('Non siamo riusciti ad effettuare la tua application');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const form = hasApplied ? (\r\n    <div className=\"alert alert-info\">\r\n      Hai già mandato la tua candidatura a questa call.\r\n    </div>\r\n  ) : (\r\n    <form onSubmit={handlesubmit}>\r\n      <section>\r\n        <label htmlFor=\"seniority\">\r\n          Seniority:\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"seniority\"\r\n            value={seniority}\r\n            onChange={(e) => setSeniority(e.target.value)}\r\n          >\r\n            <option value=\"junior\">Junior</option>\r\n            <option value=\"senior\">Senior</option>\r\n          </select>\r\n        </label>\r\n      </section>\r\n      <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n    <div className=\"call-view user-not-owner text-left p-3\">\r\n      <CallInformation {...props} owner={false} />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {form}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { getCall } from '../../utils/JobCallApi';\r\nimport { Call, User } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\nimport { UserIsNotOwner, UserIsOwner } from './AuthVariants';\r\nimport './calldetail.scss';\r\n\r\nexport interface CallDetailProps {\r\n  match: { params: { id: string } };\r\n}\r\n\r\n/**\r\n *\r\n * Schermata che mostra i dettagli di una Call.\r\n * Ritorna una variante a seconda che l'utente\r\n * sia il poster della Call o no.\r\n */\r\nfunction CallDetails(props: CallDetailProps) {\r\n  const [error, setError] = useState('');\r\n  const [call, setCall] = useState<Call | null>(null);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const ctx = useContext(UserContext);\r\n\r\n  const {\r\n    match: {\r\n      params: { id },\r\n    },\r\n  } = props;\r\n  let user: User | undefined;\r\n  if (ctx) {\r\n    user = ctx.user;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (user) {\r\n      getCall(user, id)\r\n        .then((data) => {\r\n          if (data) {\r\n            console.log(data);\r\n            setCall(data);\r\n            setLoading(false);\r\n          } else {\r\n            setError('Non siamo riusciti a scaricare i dati');\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(() => setError('Non siamo riusciti a scaricare i dati'));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user?.uid === call?.poster) {\r\n      setIsOwner(true);\r\n    } else {\r\n      setIsOwner(false);\r\n    }\r\n  }, [setIsOwner, user, call]);\r\n\r\n  const refreshCallData = () => {\r\n    setLoading(true);\r\n    if (user) {\r\n      getCall(user, id)\r\n        .then((data) => {\r\n          if (data) {\r\n            setCall(data);\r\n            setLoading(false);\r\n          } else {\r\n            setError('Non siamo riusciti a scaricare i dati');\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(() => setError('Non siamo riusciti a scaricare i dati'));\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n  if (user && call) {\r\n    if (isOwner) {\r\n      return <UserIsOwner refresh={refreshCallData} user={user} call={call} />;\r\n    } else {\r\n      return (\r\n        <UserIsNotOwner refresh={refreshCallData} user={user} call={call} />\r\n      );\r\n    }\r\n  } else return <h1>{error}</h1>;\r\n}\r\n\r\nexport default CallDetails;\r\n","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBookmark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBookmark);\nexport default __webpack_public_path__ + \"static/media/bookmark.ec789b31.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.7b12ae00.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.0ddb797a.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.501536c5.svg\";\nexport { ForwardRef as ReactComponent };","/**\r\n * Aggiungo questi export per facilità d'importazione\r\n */\r\n\r\nimport { ReactComponent as bookmarkIcon } from '../media/bookmark.svg';\r\nimport { ReactComponent as searchIcon } from '../media/search.svg';\r\nimport { ReactComponent as addIcon } from '../media/add.svg';\r\nimport { ReactComponent as menuIcon } from '../media/menu.svg';\r\n\r\nexport const BookmarkIcon = bookmarkIcon;\r\nexport const SearchIcon = searchIcon;\r\nexport const AddIcon = addIcon;\r\nexport const MenuIcon = menuIcon;\r\n","import React, { useContext, useState } from 'react';\r\nimport { AddIcon } from '../../utils/icons';\r\nimport { CallEssential } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\n\r\ninterface Props {\r\n  addCall: (call: CallEssential) => void;\r\n}\r\n\r\n/**\r\n *\r\n * Card funzionale per aggiungere una call.\r\n * Sempre la prima in lista in Dashboard.\r\n */\r\nfunction AddCall(props: Props) {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const newCall: CallEssential = { title, description };\r\n    props.addCall(newCall);\r\n    setTitle('');\r\n    setDescription('');\r\n    setClicked(false);\r\n  };\r\n  const ctx = useContext(UserContext);\r\n  let addPopup;\r\n  if (ctx) {\r\n    const { user } = ctx;\r\n    addPopup = (\r\n      <div className=\"add-call-form\">\r\n        <h1>Aggiungi call</h1>\r\n        <form onSubmit={handleSubmit} className=\"add-call\">\r\n          <table cellPadding={1}>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label htmlFor=\"title\">Titolo:</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    value={title}\r\n                    onChange={({ target: { value } }) => setTitle(value)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label htmlFor=\"description\">Descrizione: </label>\r\n                </td>\r\n                <td>\r\n                  <textarea\r\n                    cols={25}\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={({ target: { value } }) => setDescription(value)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label htmlFor=\"type\">Tipo: </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" readOnly value={user.accountType} />\r\n                </td>\r\n              </tr>\r\n              {user.accountType === 'external' && (\r\n                <tr>\r\n                  <td>\r\n                    <label htmlFor=\"clientid\">Codice cliente: </label>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"clientid\"\r\n                      readOnly\r\n                      value={user.clientId}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <small className=\"text-center mt-3\">\r\n            Non è un bug che &apos;tipo&apos; e &apos;codice cliente&apos; non\r\n            siano editabili. Il server prende queste due informazioni\r\n            direttamente dall&apos;oggetto utente autenticato.\r\n          </small>\r\n          <div className=\"buttons\">\r\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => {\r\n                setTitle('');\r\n                setDescription('');\r\n                setClicked(false);\r\n              }}\r\n            >\r\n              Annulla\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"call-card text-left\">\r\n      <div className=\"call-taskbar\" style={{ backgroundColor: 'grey' }}></div>\r\n      <div className=\"call-add-box\" onClick={() => setClicked(true)}>\r\n        <AddIcon />\r\n      </div>\r\n      {clicked && addPopup}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCall;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BookmarkIcon } from '../../utils/icons';\r\nimport { Call, FavoriteEditor, User } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\n\r\n/**\r\n *\r\n * Elemento ui per rappresentare una call in stile Card\r\n */\r\nfunction CallCard(props: Call) {\r\n  const taskbarBackgroundColor = props.type === 'internal' ? 'blue' : 'orange';\r\n  const ctx = useContext(UserContext);\r\n  const user: User | undefined = ctx?.user;\r\n  const editFavorites: FavoriteEditor | undefined = ctx?.editFavorites;\r\n\r\n  const isFavorite = user?.favorites?.includes(props.id);\r\n\r\n  return (\r\n    <div className=\"call-card text-left\">\r\n      <div\r\n        className=\"call-taskbar\"\r\n        style={{ backgroundColor: taskbarBackgroundColor }}\r\n      >\r\n        {props.type}\r\n        <div\r\n          className={\r\n            isFavorite ? 'bookmark-icon bookmark-selected' : 'bookmark-icon'\r\n          }\r\n          onClick={() => {\r\n            if (isFavorite && user) {\r\n              // setIsFavorite(false);\r\n              editFavorites && editFavorites('remove', props.id);\r\n              return;\r\n            }\r\n            // setIsFavorite(true);\r\n            editFavorites && editFavorites('add', props.id);\r\n          }}\r\n        >\r\n          <BookmarkIcon />\r\n        </div>\r\n      </div>\r\n      <div className=\"body p-3\">\r\n        <div>\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        {props.type === 'external' && (\r\n          <div>\r\n            <span>{props.clientId}</span>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <span>{props.timePosted.toLocaleDateString()}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-apply\">\r\n        <button className=\"btn btn-primary\">\r\n          <Link to={`/call/${props.id}`}>Apply</Link>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CallCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { SearchIcon } from '../../utils/icons';\r\nimport { QueryType } from '../../utils/Types';\r\n\r\ninterface Props {\r\n  setQueryType: (queryType: QueryType) => void;\r\n  setQuery: (query: string) => void;\r\n  setClientIdQuery: (query: string) => void;\r\n}\r\n/**\r\n * Converte una stringa libera in una QueryType\r\n * per motivi di Type Safety\r\n */\r\nfunction toQueryType(str: string): QueryType {\r\n  if (str === 'internal') return 'internal';\r\n  if (str === 'external') return 'external';\r\n  if (str === 'title') return 'title';\r\n  else return 'title';\r\n}\r\n\r\n/**\r\n *\r\n * Barra di ricerca per filtrare le call in Dasboard\r\n */\r\nfunction FilterBar(props: Props) {\r\n  const [queryType, setQueryType] = useState<QueryType>('title');\r\n  const [query, setQuery] = useState('');\r\n  const [clientQuery, setClientQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Imposta il queryType di <Dashboard> al valore inizializzato e aggiornato.\r\n    // Evita che i due valori siano fuori sincronia sin dall'inizializzazione\r\n    props.setQueryType(queryType);\r\n    props.setQuery(query);\r\n    props.setClientIdQuery(clientQuery);\r\n  }, [queryType, query, clientQuery]);\r\n\r\n  let body;\r\n  switch (queryType) {\r\n    case 'external':\r\n      body = (\r\n        <div className=\"filter-body\">\r\n          <section>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Cerca titolo\"\r\n              value={query}\r\n              onChange={(e) => {\r\n                setQuery(e.target.value);\r\n              }}\r\n            />\r\n            <SearchIcon />\r\n          </section>\r\n          <section>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Cerca codice cliente\"\r\n              value={clientQuery}\r\n              onChange={(e) => {\r\n                setClientQuery(e.target.value);\r\n              }}\r\n            />\r\n            <SearchIcon />\r\n          </section>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'internal':\r\n      body = (\r\n        <div className=\"filter-body\">\r\n          <section>\r\n            {' '}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Cerca titolo\"\r\n              value={query}\r\n              onChange={(e) => {\r\n                setQuery(e.target.value);\r\n              }}\r\n            />\r\n            <SearchIcon />\r\n          </section>\r\n        </div>\r\n      );\r\n      break;\r\n    case 'title':\r\n      body = (\r\n        <div className=\"filter-body\">\r\n          <section>\r\n            {' '}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Cerca titolo\"\r\n              value={query}\r\n              onChange={(e) => {\r\n                setQuery(e.target.value);\r\n              }}\r\n            />\r\n            <SearchIcon />\r\n          </section>\r\n        </div>\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className=\"filter-bar text-left\">\r\n      {body}\r\n      <select\r\n        value={queryType}\r\n        onChange={(e) => {\r\n          setQueryType(toQueryType(e.target.value));\r\n        }}\r\n      >\r\n        <option value=\"internal\">Call interne</option>\r\n        <option value=\"external\">Call esterne</option>\r\n        <option value=\"title\">Cerca per titolo</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterBar;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport isDev from '../../utils/IsDev';\r\nimport { createCall, getCalls } from '../../utils/JobCallApi';\r\nimport { Call, CallEssential, QueryType } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\nimport AddCall from './AddCall';\r\nimport CallCard from './CallCard';\r\nimport './dashboard.scss';\r\nimport FilterBar from './FilterBar';\r\n\r\n/**\r\n * Funzione per ordinare le call prima in base allo stato di preferiti\r\n * poi in base alla data di pubblicazione.\r\n * @param a Prima Call\r\n * @param b Seconda Call\r\n * @param favorites La lista di preferiti dell'utente\r\n */\r\nfunction sortByIsFavorite(\r\n  a: Call,\r\n  b: Call,\r\n  favorites: number[] | undefined\r\n): number {\r\n  if (!favorites) {\r\n    return 0;\r\n  } else {\r\n    if (\r\n      (favorites.includes(a.id) && favorites.includes(b.id)) ||\r\n      (!favorites.includes(a.id) && !favorites.includes(b.id))\r\n    ) {\r\n      if (a.timePosted < b.timePosted) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    } else {\r\n      if (favorites.includes(a.id)) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Dashbaord principale che mostra tutte le call aperte.\r\n */\r\nfunction Dashboard() {\r\n  const [calls, setCalls] = useState<Call[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filteredCalls, setFilteredCalls] = useState<Call[]>([]);\r\n  const [queryType, setQueryType] = useState<QueryType>('title');\r\n  const [query, setQuery] = useState<string>('');\r\n  const [clientIdQuery, setClientIdQuery] = useState<string>('');\r\n  const [loading, setIsLoading] = useState(false);\r\n  const ctx = useContext(UserContext);\r\n  const user = ctx?.user;\r\n\r\n  const refreshCalls = () => {\r\n    getCalls()\r\n      .then((data) => {\r\n        setCalls(data);\r\n        setFilteredCalls(data);\r\n      })\r\n      .catch(() => {\r\n        setError('Errore nel download delle call');\r\n      });\r\n  };\r\n\r\n  const addCall = async (call: CallEssential) => {\r\n    if (isDev) {\r\n      return;\r\n    }\r\n    if (user) {\r\n      const success = await createCall(user, call).catch(() => {\r\n        return false;\r\n      });\r\n      if (success) {\r\n        refreshCalls();\r\n      } else {\r\n        setError('Non siamo riusciti a creare la tua call');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Filtra le Calls sulla base dei filtri provenienti da <FilterBar>\r\n    if (queryType === 'title') {\r\n      setFilteredCalls(\r\n        calls.filter((call) => {\r\n          return call.title.includes(query);\r\n        })\r\n      );\r\n    } else if (queryType === 'external') {\r\n      setFilteredCalls(\r\n        calls.filter(\r\n          (call) =>\r\n            call.type === 'external' &&\r\n            call.clientId?.includes(clientIdQuery) &&\r\n            call.title.includes(query)\r\n        )\r\n      );\r\n    } else if (queryType === 'internal') {\r\n      setFilteredCalls(\r\n        calls.filter(\r\n          (call) => call.type === 'internal' && call.title.includes(query)\r\n        )\r\n      );\r\n    } else {\r\n      setFilteredCalls(calls);\r\n    }\r\n  }, [query, queryType, clientIdQuery, calls]);\r\n\r\n  useEffect(() => {\r\n    // Richiedi le call dal server\r\n    setIsLoading(true);\r\n    getCalls()\r\n      .then((data) => {\r\n        data = data.sort((a, b) => sortByIsFavorite(a, b, user?.favorites));\r\n        setCalls(data);\r\n        setFilteredCalls(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setError('Error');\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Riordina le Call se vengono modificati i preferiti\r\n    const sortedFavorites = calls.sort((a, b) =>\r\n      sortByIsFavorite(a, b, user?.favorites)\r\n    );\r\n    setCalls([...sortedFavorites]);\r\n  }, [ctx]);\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <FilterBar\r\n        setQuery={setQuery}\r\n        setQueryType={setQueryType}\r\n        setClientIdQuery={setClientIdQuery}\r\n      />\r\n      <div className=\"calls\">\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        {query ? <></> : <AddCall addCall={addCall} />}\r\n        {filteredCalls.map((call) => (\r\n          <CallCard key={call.id} {...call} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { ApplicationStatus } from './Types';\r\n\r\n/**\r\n *\r\n * ritorna il colore da attribuire allo stato di una candidatura\r\n */\r\nexport const getColorOnStatus = (status: ApplicationStatus) => {\r\n  switch (status) {\r\n    case 'confermato':\r\n      return 'green';\r\n    case 'review':\r\n      return 'orange';\r\n    case 'ricevuto' || 'received':\r\n      return 'blue';\r\n    case 'rifiutato':\r\n      return 'red';\r\n  }\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { getUserApplications } from '../../utils/JobCallApi';\r\nimport { getColorOnStatus } from '../../utils/prettify';\r\nimport { CallApplication } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\nimport './myapplications.scss';\r\n\r\n/**\r\n * Mostra tutte le candidature dell'utente autenticato.\r\n */\r\nfunction MyApplications() {\r\n  const [applications, setApplications] = useState<CallApplication[]>([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const ctx = useContext(UserContext);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (ctx) {\r\n      getUserApplications(ctx.user)\r\n        .then((data) => {\r\n          setApplications(data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError('Non è stato possibile ottenere i tuoi post');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, []);\r\n  const applicationNodes = applications.map((application) => (\r\n    <tr key={application.id}>\r\n      <td>{application.target?.title}</td>\r\n      <td>{application.timeApplied.toLocaleDateString()}</td>\r\n      <td>{application.target?.type}</td>\r\n      <td style={{ color: getColorOnStatus(application.applicationStatus) }}>\r\n        {application.applicationStatus}\r\n      </td>\r\n      <td className=\"no-linebreak\">\r\n        <a href={`/call/${application.target?.id}`}>Vai a call</a>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <div className=\"user-applications text-left p-4\">\r\n      <h1 className=\"text-center mb-3\">Candidature</h1>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <table className=\"table table-striped table-responsive-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Titolo</th>\r\n            <th>Data</th>\r\n            <th>Tipo</th>\r\n            <th>Stato</th>\r\n            <th>Link</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{applications && applicationNodes}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyApplications;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { getUserPosts } from '../../utils/JobCallApi';\r\nimport { Call } from '../../utils/Types';\r\nimport { UserContext } from '../Auth/Auth';\r\nimport Spinner from '../Spinner.tsx/Spinner';\r\nimport './myposts.scss';\r\n\r\n/**\r\n * Mostra tutti le Call create dall'utente autenticato\r\n */\r\nfunction MyPosts() {\r\n  const [posts, setPosts] = useState<Call[]>([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const ctx = useContext(UserContext);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (ctx) {\r\n      getUserPosts(ctx.user)\r\n        .then((data) => {\r\n          setPosts(data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError('Non è stato possibile ottenere i tuoi post');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, []);\r\n  const postNodes = posts.map((post) => (\r\n    <tr key={post.id}>\r\n      <td>{post.title}</td>\r\n      <td>{post.timePosted.toLocaleDateString()}</td>\r\n      <td>{post.applications?.length}</td>\r\n      <td className=\"no-linebreak\">\r\n        <a href={`/call/${post.id}`}>Vai a call</a>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <div className=\"user-posts text-left p-4\">\r\n      <h1 className=\"text-center mb-3\">Post</h1>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <table className=\"table table-striped table-responsive-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Titolo</th>\r\n            <th>Data</th>\r\n            <th>Candidature</th>\r\n            <th>Link</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{posts && postNodes}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BootstrapNav from 'react-bootstrap/Navbar';\r\nimport { Nav } from 'react-bootstrap';\r\nimport './navbar.scss';\r\nimport { UserContext } from '../Auth/Auth';\r\n\r\nfunction NavBar() {\r\n  const user = useContext(UserContext);\r\n  return (\r\n    <BootstrapNav expand=\"sm\" bg=\"light\">\r\n      <BootstrapNav.Brand>Aron Winkler</BootstrapNav.Brand>\r\n      <BootstrapNav.Toggle aria-controls=\"navbar-nav\" />\r\n      <BootstrapNav.Collapse id=\"navbar-nav\">\r\n        <Nav className=\"ml-auto mynav-nav\">\r\n          <BootstrapNav.Text>\r\n            <Link to=\"/\">Dashboard</Link>\r\n          </BootstrapNav.Text>\r\n          <BootstrapNav.Text>\r\n            <Link to=\"/posts\">Post</Link>\r\n          </BootstrapNav.Text>\r\n          <BootstrapNav.Text>\r\n            <Link to=\"/applications\">Candidature</Link>\r\n          </BootstrapNav.Text>\r\n          <BootstrapNav.Text>\r\n            <a href=\"https://github.com/waron97/hfarm.back.git\">GitHub</a>\r\n          </BootstrapNav.Text>\r\n          <BootstrapNav.Text>\r\n            <a\r\n              href=\"#\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                localStorage.removeItem('authToken');\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Logout ({user?.user.username})\r\n            </a>\r\n          </BootstrapNav.Text>\r\n        </Nav>\r\n      </BootstrapNav.Collapse>\r\n    </BootstrapNav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Auth from './components/Auth/Auth';\nimport CallDetails from './components/CallDetailts/CallDetails';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MyApplications from './components/MyApplications/MyApplications';\nimport MyPosts from './components/MyPosts/MyPosts';\nimport NavBar from './components/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <Auth>\n      <div className=\"App\">\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route path=\"/call/:id\" component={CallDetails}></Route>\n            <Route path=\"/posts\" component={MyPosts} />\n            <Route path=\"/applications\" component={MyApplications} />\n          </Switch>\n        </Router>\n      </div>\n    </Auth>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}